{"version":3,"sources":["images/loginIcon.png","images/user.png","images/baseline-exit_to_app-24px.svg","components/Login.js","components/AppBar.js","components/Task.js","components/SimpleModal.js","components/TaskPlannerDrawer.js","components/TaskPlanner.js","components/NewTask.js","components/UserProfile.js","components/RegisterPage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Login","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","user","password","handleChangeUser","bind","assertThisInitialized","handleChangePassword","handleSubmit","handleRegisterPage","classes","react_default","a","createElement","src","loginIcon","className","image","alt","id","form","onSubmit","TextField_default","required","label","margin","text","variant","onChange","type","Button_default","color","button","onClick","e","setState","target","value","preventDefault","localStorage","getItem","users","JSON","parse","x","list","username","setItem","window","location","href","alert","document","getElementById","reset","Component","withStyles","theme","width","marginTop","AppBarPage","AppBar_default","position","Toolbar_default","Typography_default","grow","root","flexGrow","textAlign","menuButton","marginLeft","marginRight","Task","Card_default","card","CardContent_default","component","tasks","responsible","name","status","description","FormDialog","open","handleClickOpen","handleClose","textFields","field","onchange","handleChangeResponsible","handleChangeDuedate","default","map","Fragment","defaultValue","menuItems","MenuItem_default","buttonFilter","Tune_default","leftIcon","Dialog_default","onClose","aria-labelledby","dialog","DialogTitle_default","DialogContent_default","DialogContentText_default","select","handleChangeStatus","SelectProps","MenuProps","menu","React","spacing","unit","TaskPlannerDrawer","handleDrawerOpen","handleDrawerClose","handleChangeIsLoggedIn","stringify","components_Task","AppBar_AppBar","classNames","appBar","defineProperty","appBarShift","disableGutters","IconButton_default","aria-label","hide","Menu_default","noWrap","toolbarTitle","handleNewTask","Create_default","SimpleModal","Drawer_default","drawer","anchor","paper","drawerPaper","drawerHeader","ChevronLeft_default","Divider_default","userData","userIcon","gutterBottom","fullname","email","occupation","phone","List_default","ListItem_default","handleProfilePage","ListItemIcon_default","Person_default","ListItemText_default","primary","ExitIcon","content","contentShift","minWidth","display","transition","transitions","create","easing","sharp","duration","leavingScreen","concat","easeOut","enteringScreen","flexShrink","objectSpread","alignItems","padding","mixins","toolbar","justifyContent","flex","TaskPlanner","components_TaskPlannerDrawer","NewTask","duedate","handleChangeDescription","handleSendTask","iconButton","backButton","handleBackPage","ArrowBack_default","components_AppBar","taskItems","json","push","textField","rightIcon","UserProfile","handleChangeFullName","handleChangeEmail","handleChangePhone","handleChangeOccupation","handleChangeProfile","textfields","RegisterPage","handleChangeUsername","handleSendRegister","newUser","App","routesNoLogged","path","components_Login","components_RegisterPage","pathsLogged","components_TaskPlanner","components_NewTask","components_UserProfile","Route","key","pathsNoLogged","exact","isLogged","BrowserRouter","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","ReactDOM","render","src_App_0","URL","process","origin","addEventListener","fetch","response","contentType","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.85633fe2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loginIcon.e56b8419.png\";","module.exports = __webpack_public_path__ + \"static/media/user.04d79fe9.png\";","module.exports = __webpack_public_path__ + \"static/media/baseline-exit_to_app-24px.63002100.svg\";","import React, {Component} from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport loginIcon from '../images/loginIcon.png';\n\nconst styles = theme => ({\n    button: {\n        width: '30%'\n    },\n    text: {\n        width: '30%'\n    },\n    image: {\n        width: '10%',\n        marginTop: '3%'\n    }\n});\n\nclass Login extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            user: \"\",\n            password: \"\"\n        }\n\n        this.handleChangeUser = this.handleChangeUser.bind(this);\n        this.handleChangePassword = this.handleChangePassword.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleRegisterPage = this.handleRegisterPage.bind(this);\n    }\n\n    render() {\n        const {classes} = this.props;\n        return (\n            <div>\n                <br/>\n                <img\n                    src={loginIcon}\n                    className={classes.image}\n                    alt=\"\"\n                />\n                <br/>\n                <form\n                    id=\"loginForm\"\n                    className={classes.form}\n                    onSubmit={this.handleSubmit}\n                >\n                    <TextField\n                        required\n                        id=\"user\"\n                        label=\"User\"\n                        margin=\"normal\"\n                        className={classes.text}\n                        variant=\"outlined\"\n                        onChange={this.handleChangeUser}\n                    />\n                    <br/>\n                    <TextField\n                        required\n                        id=\"password\"\n                        label=\"Password\"\n                        type=\"password\"\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        className={classes.text}\n                        onChange={this.handleChangePassword}\n                    />\n                    <br/>\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.button}\n                        type=\"submit\"\n                    >\n                        Login\n                    </Button>\n                    <br/>\n                    <br/>\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.button}\n                        onClick={this.handleRegisterPage}\n                    >\n                        Sign up\n                    </Button>\n                </form>\n            </div>\n        );\n    }\n\n    handleChangeUser(e) {\n        this.setState({user: e.target.value});\n    }\n\n    handleChangePassword(e) {\n        this.setState({password: e.target.value})\n    }\n\n    handleSubmit(e) {\n\n        e.preventDefault();\n\n        if (localStorage.getItem(\"users\") !== null) {\n\n            const users = JSON.parse(localStorage.getItem(\"users\"));\n\n            for (let x in users.list) {\n                if (users.list[x].username === this.state.user && users.list[x].password === this.state.password) {\n                    localStorage.setItem(\"userLogged\", users.list[x].username);\n                    localStorage.setItem(\"isLoggedIn\", \"true\");\n                    window.location.href = \"/tasks\";\n                }\n            }\n            if (localStorage.getItem(\"isLoggedIn\") !== \"true\") {\n                alert(\"Incorrect user or password\");\n                document.getElementById(\"loginForm\").reset();\n            }\n\n        } else {\n            alert(\"There is no users registered, please sign up\");\n            window.location.href = \"/register\";\n        }\n    }\n\n\n    handleRegisterPage() {\n        window.location.href = \"/register\";\n    }\n}\n\nexport default withStyles(styles)(Login);","import React, {Component} from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Button from \"@material-ui/core/Button\";\n\nconst styles = {\n    root: {\n        flexGrow: 1,\n    },\n    grow: {\n        flexGrow: 1,\n        textAlign: \"left\"\n    },\n    menuButton: {\n        marginLeft: -12,\n        marginRight: 20,\n    },\n}\n\nclass AppBarPage extends Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n\n        const {classes} = this.props;\n\n        return (\n            <div>\n                <AppBar position=\"static\">\n                    <Toolbar>\n                        {this.props.button}\n                        <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\n                            Task Planner\n                        </Typography>\n                    </Toolbar>\n                </AppBar>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(AppBarPage);","import React, {Component} from 'react';\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\n\nconst styles = theme => ({\n    card: {}\n});\n\nclass Task extends Component {\n\n    render() {\n\n        const {classes} = this.props;\n\n        return (\n            <div>\n                <Card className={classes.card}>\n                    <CardContent>\n                        <Typography variant=\"h5\" component=\"h2\">\n                            {this.props.tasks.responsible.name}\n                        </Typography>\n                        <Typography variant=\"h5\" component=\"h2\">\n                            {this.props.tasks.status}\n                        </Typography>\n                        <Typography variant=\"h5\" component=\"h2\">\n                            {this.props.tasks.description}\n                        </Typography>\n                    </CardContent>\n                </Card>\n                <br/>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(Task);","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Tune from '@material-ui/icons/Tune';\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\nconst styles = theme => ({\n    buttonFilter: {\n        marginRight: 20\n    }, leftIcon: {\n        marginRight: theme.spacing.unit,\n    }, dialog: {\n        textAlign: \"center\"\n    }, text: {\n        width: \"70%\"\n    }, button: {\n        width: \"70%\"\n    }\n});\n\nclass FormDialog extends React.Component {\n    state = {\n        open: false,\n    };\n\n    handleClickOpen = () => {\n        this.setState({open: true});\n    };\n\n    handleClose = () => {\n        this.setState({open: false});\n    };\n\n    render() {\n\n        const {classes} = this.props;\n\n        const fields = [\n            {\n                field: \"Responsible\",\n                onchange: this.handleChangeResponsible,\n                type: \"text\"\n            }, {\n                field: \"Duedate\",\n                onchange: this.handleChangeDuedate,\n                type: \"date\",\n                default: \"2019-01-01\"\n            }];\n\n        const textFields = fields.map((x) => {\n            return (\n                <>\n                    <TextField\n                        required\n                        label={x.field}\n                        onChange={x.onchange}\n                        margin=\"normal\"\n                        className={classes.text}\n                        variant=\"outlined\"\n                        type={x.type}\n                        defaultValue={x.default}\n                    />\n                    <br/>\n                </>\n            );\n        });\n\n        const options = [\"In progress\", \"Ready\", \"Completed\"]\n\n        const menuItems = options.map((x) => {\n            return (\n                <MenuItem value={x}>\n                    {x}\n                </MenuItem>\n            );\n        });\n\n        return (\n            <div>\n                <Button\n                    color=\"inherit\"\n                    className={classes.buttonFilter}\n                    onClick={this.handleClickOpen}\n                >\n                    <Tune className={classes.leftIcon}/>\n                    Filter\n                </Button>\n                <Dialog\n                    open={this.state.open}\n                    onClose={this.handleClose}\n                    aria-labelledby=\"form-dialog-title\"\n                    className={classes.dialog}\n                >\n                    <DialogTitle id=\"form-dialog-title\">Filter</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            Here you can filter your tasks to show them by Date, Responsible or Status\n                        </DialogContentText>\n                        {textFields}\n                        <TextField\n                            select\n                            required\n                            margin=\"normal\"\n                            label=\"Status\"\n                            className={classes.text}\n                            value={this.state.status}\n                            onChange={this.handleChangeStatus}\n                            SelectProps={{\n                                MenuProps: {\n                                    className: classes.menu,\n                                },\n                            }}\n                            variant=\"outlined\"\n                        >\n                            {menuItems}\n                        </TextField>\n                        <br/>\n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className={classes.button}\n                            type=\"submit\"\n                        >\n                            Filter\n                        </Button>\n                    </DialogContent>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(FormDialog);","import React, {Component} from 'react';\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport AppBar from \"@material-ui/core/es/AppBar\";\nimport classNames from 'classnames';\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Card from \"@material-ui/core/Card\";\nimport userIcon from \"../images/user.png\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ExitIcon from \"../images/baseline-exit_to_app-24px.svg\";\nimport Task from \"./Task\";\nimport Person from '@material-ui/icons/Person';\nimport Create from '@material-ui/icons/Create';\nimport Button from \"@material-ui/core/Button\";\nimport Modal from \"./SimpleModal\";\n\n\nconst drawerWidth = 350;\n\nconst styles = theme => ({\n    card: {\n        minWidth: 275,\n    },\n    root: {\n        display: 'flex',\n    },\n    appBar: {\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarShift: {\n        width: `calc(100% - ${drawerWidth}px)`,\n        marginLeft: drawerWidth,\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButton: {\n        marginLeft: 12,\n        marginRight: 20,\n    },\n    hide: {\n        display: 'none',\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n    },\n    drawerPaper: {\n        width: drawerWidth,\n    },\n    drawerHeader: {\n        display: 'flex',\n        alignItems: 'center',\n        padding: '0 8px',\n        ...theme.mixins.toolbar,\n        justifyContent: 'flex-end',\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing.unit * 3,\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        marginLeft: -drawerWidth,\n    },\n    contentShift: {\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n        marginLeft: 0,\n    },\n    userIcon: {\n        width: '30%'\n    },\n    grow: {\n        flexGrow: 1,\n    },\n    button: {\n        marginRight: 20\n    }, leftIcon: {\n        marginRight: theme.spacing.unit,\n    },\n    toolbarTitle: {\n        flex: 1,\n        textAlign: \"left\"\n    }\n});\n\nclass TaskPlannerDrawer extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            open: false,\n            tasks: []\n        };\n\n        this.handleChangeIsLoggedIn = this.handleChangeIsLoggedIn.bind(this);\n    };\n\n    render() {\n\n        const {classes} = this.props;\n\n        const {open} = this.state;\n\n        if (localStorage.getItem(\"tasks\") === null) {\n            const tasks = {\n                list: []\n            }\n            localStorage.setItem(\"tasks\", JSON.stringify(tasks))\n        }\n\n        const json = JSON.parse(localStorage.getItem(\"tasks\"));\n\n        const tasks = json.list.map((x) => {\n            return (\n                <Task tasks={x}/>\n            );\n        });\n\n        let user;\n\n        const users = JSON.parse(localStorage.getItem(\"users\"));\n\n        for (let x in users.list) {\n            if (users.list[x].username === localStorage.getItem(\"userLogged\")) {\n                user = users.list[x];\n            }\n        }\n\n        return (\n            <div className={classes.root}>\n                <AppBar\n                    position=\"fixed\"\n                    className={classNames(classes.appBar, {\n                        [classes.appBarShift]: open,\n                    })}\n                >\n                    <Toolbar disableGutters={!open}>\n                        <IconButton\n                            color=\"inherit\"\n                            aria-label=\"Open drawer\"\n                            onClick={this.handleDrawerOpen}\n                            className={classNames(classes.menuButton, open && classes.hide)}\n                        >\n                            <MenuIcon/>\n                        </IconButton>\n                        <Typography variant=\"h6\" color=\"inherit\" noWrap className={classes.toolbarTitle}>\n                            Task planner\n                        </Typography>\n                        <Button\n                            color=\"inherit\"\n                            className={classes.button}\n                            onClick={this.handleNewTask}\n                        >\n                            <Create className={classes.leftIcon}/>\n                            New task\n                        </Button>\n                        <Modal/>\n                    </Toolbar>\n                </AppBar>\n                <Drawer\n                    className={classes.drawer}\n                    variant=\"persistent\"\n                    anchor=\"left\"\n                    open={open}\n                    classes={{\n                        paper: classes.drawerPaper,\n                    }}\n                >\n                    <div className={classes.drawerHeader}>\n                        <IconButton onClick={this.handleDrawerClose}>\n                            <ChevronLeftIcon/>\n                        </IconButton>\n                    </div>\n                    <Divider/>\n                    <div className={classes.userData}>\n                        <Card className={classes.card}>\n                            <CardContent>\n                                <img src={userIcon} className={classes.userIcon} alt=\"\"/>\n                                <Typography variant=\"subtitle2\" gutterBottom>\n                                    <b>{user.fullname}</b>\n                                </Typography>\n                                <Typography variant=\"body1\" gutterBottom>\n                                    {user.email}\n                                </Typography>\n                                <Typography variant=\"body1\" gutterBottom>\n                                    {user.occupation}\n                                </Typography>\n                                <Typography variant=\"body1\" gutterBottom>\n                                    Cellphone: {user.phone}\n                                </Typography>\n                            </CardContent>\n                        </Card>\n                        <List>\n                            <ListItem\n                                button\n                                onClick={this.handleProfilePage}\n                            >\n                                <ListItemIcon>\n                                    <Person/>\n                                </ListItemIcon>\n                                <ListItemText primary=\"Profile\"/>\n                            </ListItem>\n                            <ListItem\n                                button\n                                onClick={this.handleChangeIsLoggedIn}\n                            >\n                                <ListItemIcon>\n                                    <img src={ExitIcon} alt=\"\"/>\n                                </ListItemIcon>\n                                <ListItemText primary=\"Logout\"/>\n                            </ListItem>\n                        </List>\n                    </div>\n                </Drawer>\n                <main\n                    className={classNames(classes.content, {\n                        [classes.contentShift]: open,\n                    })}\n                >\n                    <div className={classes.drawerHeader}/>\n                    {tasks}\n                </main>\n            </div>\n        );\n    }\n\n    handleDrawerOpen = () => {\n        this.setState({open: true});\n    };\n\n    handleDrawerClose = () => {\n        this.setState({open: false});\n    };\n\n    handleChangeIsLoggedIn() {\n        localStorage.setItem(\"isLoggedIn\", \"false\");\n        window.location.href = '/';\n    }\n\n    handleProfilePage() {\n        window.location.href = \"/profile\"\n    }\n\n    handleNewTask() {\n        window.location.href = \"/newtask\"\n    }\n}\n\nexport default withStyles(styles)(TaskPlannerDrawer);","import React, {Component} from 'react';\nimport TaskPlannerDrawer from './TaskPlannerDrawer';\n\n//const styles = theme => ({});\n\nclass TaskPlanner extends Component {\n\n    render() {\n\n        //const {classes} = this.props;\n\n        return (\n            <div>\n                <TaskPlannerDrawer/>\n            </div>\n        );\n    }\n}\n\nexport default TaskPlanner;","import React, {Component} from 'react';\nimport AppBarPage from \"./AppBar\";\nimport ArrowBack from '@material-ui/icons/ArrowBack';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport TextField from '@material-ui/core/TextField';\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport 'typeface-roboto';\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\nconst styles = theme => ({\n    backButton: {\n        marginLeft: -12,\n        marginRight: 20\n    },\n    textField: {\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit\n    },\n    text: {\n        width: '30%',\n        textAlign: \"left\",\n    },\n    button: {\n        width: '30%'\n    },\n    rightIcon: {\n        marginLeft: theme.spacing.unit,\n    }\n});\n\nclass NewTask extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            description: '',\n            responsible: '',\n            status: '',\n            duedate: ''\n        };\n\n        this.handleChangeDuedate = this.handleChangeDuedate.bind(this);\n        this.handleChangeResponsible = this.handleChangeResponsible.bind(this);\n        this.handleChangeDescription = this.handleChangeDescription.bind(this);\n        this.handleChangeStatus = this.handleChangeStatus.bind(this);\n        this.handleSendTask = this.handleSendTask.bind(this);\n    }\n\n    render() {\n\n        const {classes} = this.props;\n\n        const iconButton = (\n            <IconButton\n                className={classes.backButton}\n                onClick={this.handleBackPage}\n            >\n                <ArrowBack/>\n            </IconButton>\n        );\n\n        const fields = [\n            {\n                field: \"Description\",\n                onchange: this.handleChangeDescription,\n                type: \"text\"\n\n            }, {\n                field: \"Responsible\",\n                onchange: this.handleChangeResponsible,\n                type: \"text\"\n            }, {\n                field: \"Duedate\",\n                onchange: this.handleChangeDuedate,\n                type: \"date\",\n                default: \"2019-01-01\"\n            }];\n\n        const textFields = fields.map((x) => {\n            return (\n                <>\n                    <TextField\n                        required\n                        label={x.field}\n                        onChange={x.onchange}\n                        margin=\"normal\"\n                        className={classes.text}\n                        variant=\"outlined\"\n                        type={x.type}\n                        defaultValue={x.default}\n                    />\n                    <br/>\n                </>\n            );\n        });\n\n        const options = [\"In progress\", \"Ready\", \"Completed\"]\n\n        const menuItems = options.map((x) => {\n            return (\n                <MenuItem value={x}>\n                    {x}\n                </MenuItem>\n            );\n        });\n\n        return (\n            <>\n                <AppBarPage button={iconButton}/>\n\n                <br/>\n                <br/>\n\n                <Typography variant=\"h2\" gutterBottom>\n                    Create your new task\n                </Typography>\n                <form className={classes.form} onSubmit={this.handleSendTask}>\n\n                    {textFields}\n                    <TextField\n                        select\n                        required\n                        margin=\"normal\"\n                        label=\"Status\"\n                        className={classes.text}\n                        value={this.state.status}\n                        onChange={this.handleChangeStatus}\n                        SelectProps={{\n                            MenuProps: {\n                                className: classes.menu,\n                            },\n                        }}\n                        variant=\"outlined\"\n                    >\n                        {menuItems}\n                    </TextField>\n                    <br/>\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.button}\n                        type=\"submit\"\n                    >\n                        Send\n                    </Button>\n                </form>\n            </>\n        );\n    }\n\n    handleBackPage() {\n        window.location.href = '/tasks';\n    }\n\n    handleChangeDescription(e) {\n        this.setState({description: e.target.value});\n    }\n\n    handleChangeResponsible(e) {\n        this.setState({responsible: e.target.value});\n    }\n\n    handleChangeStatus(e) {\n        this.setState({status: e.target.value});\n    }\n\n    handleChangeDuedate(e) {\n        this.setState({duedate: e.target.value});\n    }\n\n    handleSendTask(e) {\n\n        e.preventDefault();\n\n        const taskItems = {\n            description: this.state.description,\n            responsible: {\n                name: this.state.responsible,\n                email: ''\n            },\n            status: this.state.status,\n            duedate: this.state.duedate\n        };\n\n        if (localStorage.getItem(\"tasks\") === null) {\n            const tasks = {\n                list: []\n            }\n            localStorage.setItem(\"tasks\", JSON.stringify(tasks))\n        }\n\n        const json = JSON.parse(localStorage.getItem(\"tasks\"));\n\n        json.list.push(taskItems);\n\n        localStorage.setItem(\"tasks\", JSON.stringify(json));\n\n        window.location.href = \"/tasks\";\n\n    }\n}\n\nexport default withStyles(styles)(NewTask);","import React, {Component} from 'react';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ArrowBack from '@material-ui/icons/ArrowBack';\nimport AppBarPage from \"./AppBar\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Typography from \"@material-ui/core/Typography\"\nimport TextField from '@material-ui/core/TextField';\nimport Button from \"@material-ui/core/Button\";\n\nconst styles = theme => ({\n    backButton: {\n        marginLeft: -12,\n        marginRight: 20\n    },\n    text: {\n        width: \"30%\"\n    },\n    button: {\n        width: \"30%\"\n    }\n});\n\nclass UserProfile extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            fullname: '',\n            email: '',\n            phone: 0,\n            occupation: '',\n            password: ''\n        }\n\n        this.handleChangeFullName = this.handleChangeFullName.bind(this);\n        this.handleChangeEmail = this.handleChangeEmail.bind(this);\n        this.handleChangePhone = this.handleChangePhone.bind(this);\n        this.handleChangeOccupation = this.handleChangeOccupation.bind(this);\n        this.handleChangePassword = this.handleChangePassword.bind(this);\n        this.handleChangeProfile = this.handleChangeProfile.bind(this);\n    }\n\n    render() {\n\n        const {classes} = this.props;\n\n        const iconButton = (\n            <IconButton\n                className={classes.backButton}\n                onClick={this.handleBackPage}\n            >\n                <ArrowBack/>\n            </IconButton>\n        );\n\n        const fields = [\n            {\n                field: \"New full name\",\n                onchange: this.handleChangeFullName,\n                type: \"text\"\n            },\n            {\n                field: \"New email\",\n                onchange: this.handleChangeEmail,\n                type: \"text\"\n            },\n            {\n                field: \"New phone number\",\n                onchange: this.handleChangePhone,\n                type: \"number\"\n            },\n            {\n                field: \"New occupation\",\n                onchange: this.handleChangeOccupation,\n                type: \"text\"\n            },\n            {\n                field: \"New password\",\n                onchange: this.handleChangePassword,\n                type: \"password\"\n            }\n        ];\n\n        const textfields = fields.map((x) => {\n            return (\n                <>\n                    <TextField\n                        required\n                        label={x.field}\n                        onChange={x.onchange}\n                        margin=\"normal\"\n                        className={classes.text}\n                        variant=\"outlined\"\n                        type={x.type}\n                        defaultValue={x.default}\n                    />\n                    <br/>\n                </>\n            );\n        });\n\n        return (\n            <>\n                <AppBarPage button={iconButton}/>\n                <br/>\n                <br/>\n                <Typography variant=\"h2\" gutterBottom>\n                    Update your profile\n                </Typography>\n                <form className={classes.form} onSubmit={this.handleChangeProfile}>\n                    {textfields}\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.button}\n                        type=\"submit\"\n                    >\n                        Update profile\n                    </Button>\n                </form>\n\n            </>\n        );\n    };\n\n    handleBackPage() {\n        window.location.href = \"/tasks\"\n    }\n\n    handleChangeFullName(e) {\n        this.setState({fullname: e.target.value});\n    }\n\n    handleChangeEmail(e) {\n        this.setState({email: e.target.value});\n    }\n\n    handleChangePhone(e) {\n        this.setState({phone: e.target.value});\n    }\n\n    handleChangeOccupation(e) {\n        this.setState({occupation: e.target.value});\n    }\n\n    handleChangePassword(e) {\n        this.setState({password: e.target.value});\n    }\n\n    handleChangeProfile(e) {\n\n        e.preventDefault();\n\n        let users = JSON.parse(localStorage.getItem(\"users\"));\n\n        for (let x in users.list) {\n            if (localStorage.getItem(\"userLogged\") === users.list[x].username) {\n                users.list[x].fullname = this.state.fullname;\n                users.list[x].email = this.state.email;\n                users.list[x].phone = this.state.phone;\n                users.list[x].occupation = this.state.occupation;\n                users.list[x].password = this.state.password;\n            }\n        }\n\n        localStorage.setItem(\"users\", JSON.stringify(users));\n\n        alert(\"Profile updated\");\n\n        window.location.href = \"/tasks\"\n\n    }\n}\n\nexport default withStyles(styles)(UserProfile);","import React, {Component} from 'react';\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ArrowBack from '@material-ui/icons/ArrowBack';\nimport AppBarPage from \"./AppBar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from '@material-ui/core/TextField';\nimport Button from \"@material-ui/core/Button\";\n\nconst styles = theme => ({\n    backButton: {\n        marginLeft: -12,\n        marginRight: 20\n    },\n    text: {\n        width: \"30%\"\n    },\n    button: {\n        width: '30%'\n    }\n});\n\nclass RegisterPage extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            users: [],\n            fullname: '',\n            email: '',\n            username: '',\n            phone: 0,\n            password: ''\n        }\n\n        this.handleChangeFullName = this.handleChangeFullName.bind(this);\n        this.handleChangeEmail = this.handleChangeEmail.bind(this);\n        this.handleChangeUsername = this.handleChangeUsername.bind(this);\n        this.handleChangePhone = this.handleChangePhone.bind(this);\n        this.handleChangePassword = this.handleChangePassword.bind(this);\n        this.handleChangeOccupation = this.handleChangeOccupation.bind(this);\n        this.handleSendRegister = this.handleSendRegister.bind(this);\n    }\n\n    render() {\n\n        const {classes} = this.props;\n\n        const iconButton = (\n            <IconButton\n                className={classes.backButton}\n                onClick={this.handleBackPage}\n            >\n                <ArrowBack/>\n            </IconButton>\n        );\n\n        const fields = [\n            {\n                field: \"Full name\",\n                onchange: this.handleChangeFullName,\n                type: \"text\"\n            },\n            {\n                field: \"Your email\",\n                onchange: this.handleChangeEmail,\n                type: \"text\"\n            },\n            {\n                field: \"Username\",\n                onchange: this.handleChangeUsername,\n                type: \"text\"\n            },\n            {\n                field: \"Phone number\",\n                onchange: this.handleChangePhone,\n                type: \"number\"\n            },\n            {\n                field: \"Occupation\",\n                onchange: this.handleChangeOccupation,\n                type: \"text\"\n            },\n            {\n                field: \"Password\",\n                onchange: this.handleChangePassword,\n                type: \"password\"\n            }\n        ];\n\n        const textfields = fields.map((x) => {\n            return (\n                <>\n                    <TextField\n                        required\n                        label={x.field}\n                        onChange={x.onchange}\n                        margin=\"normal\"\n                        className={classes.text}\n                        variant=\"outlined\"\n                        type={x.type}\n                        defaultValue={x.default}\n                    />\n                    <br/>\n                </>\n            );\n        });\n\n        return (\n            <>\n                <AppBarPage button={iconButton}/>\n\n                <br/>\n                <br/>\n\n                <Typography variant=\"h2\" gutterBottom>\n                    Create your tasks account, it's free!\n                </Typography>\n                <form className={classes.form} onSubmit={this.handleSendRegister}>\n                    {textfields}\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.button}\n                        type=\"submit\"\n                    >\n                        Send\n                    </Button>\n                </form>\n            </>\n        );\n    }\n\n    handleBackPage() {\n        window.location.href = \"/\"\n    }\n\n    handleChangeFullName(e) {\n        this.setState({fullname: e.target.value});\n    }\n\n    handleChangeEmail(e) {\n        this.setState({email: e.target.value});\n    }\n\n    handleChangeUsername(e) {\n        this.setState({username: e.target.value});\n    }\n\n    handleChangePhone(e) {\n        this.setState({phone: e.target.value});\n    }\n\n    handleChangePassword(e) {\n        this.setState({password: e.target.value});\n    }\n\n    handleChangeOccupation(e) {\n        this.setState({occupation: e.target.value});\n    }\n\n    handleSendRegister(e) {\n\n        e.preventDefault();\n\n        const newUser = {\n            fullname: this.state.fullname,\n            email: this.state.email,\n            username: this.state.username,\n            phone: this.state.phone,\n            occupation: this.state.occupation,\n            password: this.state.password\n        };\n\n        if (localStorage.getItem(\"users\") === null) {\n            const users = {\n                list: []\n            }\n            localStorage.setItem(\"users\", JSON.stringify(users));\n        }\n\n        const json = JSON.parse(localStorage.getItem(\"users\"));\n\n        json.list.push(newUser);\n\n        localStorage.setItem(\"users\", JSON.stringify(json));\n\n        window.location.href = \"/\";\n\n    }\n}\n\nexport default withStyles(styles)(RegisterPage);","import React, {Component} from 'react';\nimport Login from './components/Login';\nimport './App.css';\nimport AppBarPage from './components/AppBar';\nimport TaskPlanner from \"./components/TaskPlanner\";\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\nimport NewTask from \"./components/NewTask\";\nimport UserProfile from \"./components/UserProfile\";\nimport RegisterPage from \"./components/RegisterPage\";\n\nclass App extends Component {\n\n    render() {\n\n        const loginView = () => (\n            <div>\n                <AppBarPage/>\n                <Login/>\n            </div>\n        );\n\n        const taskPlannerView = () => (\n            <div>\n                <TaskPlanner/>\n            </div>\n        );\n\n        const newTaskView = () => (\n            <NewTask/>\n        );\n\n        const userProfileView = () => (\n            <UserProfile/>\n        );\n\n        const registerPageView = () => (\n            <RegisterPage/>\n        );\n\n        const routesLogged = [\n            {\n                path: \"/tasks\",\n                component: taskPlannerView\n            },\n            {\n                path: \"/newtask\",\n                component: newTaskView\n            },\n            {\n                path: \"/profile\",\n                component: userProfileView\n            }\n        ];\n\n        const routesNoLogged = [\n            {\n                path: \"/\",\n                component: loginView\n            },\n            {\n                path: \"/register\",\n                component: registerPageView\n            }\n        ];\n\n        const pathsLogged = routesLogged.map((x) => {\n            return (\n                <Route\n                    path={x.path}\n                    component={x.component}\n                    key={x}\n                />\n            );\n        });\n\n        const pathsNoLogged = routesNoLogged.map((x) => {\n            return (\n                <Route\n                    exact\n                    path={x.path}\n                    component={x.component}\n                    key={x}\n                />\n            );\n        });\n\n        const isLogged = localStorage.getItem('isLoggedIn');\n\n        return (\n            <Router>\n                <div className=\"App\">\n                    {isLogged === \"true\" ? pathsLogged : pathsNoLogged}\n                </div>\n            </Router>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('install', () => {\n            console.log(\"install!!\");\n        });\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit http://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport firebase from 'firebase';\n\nconst config = {\n    apiKey: \"AIzaSyAFPNr5dBlaiLb1QJqp1YOTNRIGzn0QLpQ\",\n    authDomain: \"task-planner-app-f396d.firebaseapp.com\",\n    databaseURL: \"https://task-planner-app-f396d.firebaseio.com\",\n    projectId: \"task-planner-app-f396d\",\n    storageBucket: \"task-planner-app-f396d.appspot.com\",\n    messagingSenderId: \"495126587051\"\n};\nfirebase.initializeApp(config);\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}