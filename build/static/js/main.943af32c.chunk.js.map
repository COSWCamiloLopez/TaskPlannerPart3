{"version":3,"sources":["images/user.png","images/baseline-exit_to_app-24px.svg","images/loginIcon.png","components/AppBar.js","components/SimpleModal.js","components/LoginForm.js","components/RegisterPage.js","components/Login.js","components/Task.js","components/Filter.js","components/NewTask.js","components/TaskPlannerDrawer.js","components/TaskPlanner.js","components/UserProfile.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","AppBarPage","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","classes","react_default","a","createElement","AppBar_default","position","Toolbar_default","button","Typography_default","variant","color","className","grow","Component","withStyles","root","flexGrow","textAlign","menuButton","marginLeft","marginRight","FormDialog","state","open","handleClickOpen","_this","setState","handleClose","Button_default","margin","onClick","size","modalButton","textButton","Dialog_default","fullWidth","onClose","aria-labelledby","dialog","DialogTitle_default","id","title","DialogContent_default","DialogContentText_default","dialogContent","form","React","theme","spacing","unit","LoginForm","userName","password","handleChangePassword","bind","assertThisInitialized","handleChangeUser","handleSubmit","e","target","value","_this2","preventDefault","asyncToGenerator","regenerator_default","mark","_callee","rawResponse","content","wrap","_context","prev","next","fetch","sent","json","console","log","localStorage","setItem","identification","window","location","href","alert","t0","document","getElementById","reset","stop","textFields","field","onChange","type","text","map","x","i","TextField_default","required","label","formButton","onSubmit","Fragment","SimpleModal","width","RegisterPage","users","fullname","email","username","phone","handleChangeFullName","handleChangeEmail","handleChangeUsername","handleChangeId","handleChangePhone","handleChangeOccupation","handleSendRegister","IconButton_default","backButton","handleBackPage","ArrowBack_default","onchange","key","defaultValue","default","occupation","newUser","fullName","phoneNumber","method","headers","Accept","Content-Type","Access-Control-Allow-Origin","Access-Control-Allow-Credentials","body","JSON","stringify","then","res","data","setTimeout","Login","components_AppBar","components_LoginForm","components_RegisterPage","Task","Card_default","card","CardContent_default","gutterBottom","tasks","responsible","description","dueDate","status","marginBottom","float","Filter","handleChangeResponsible","handleChangeDuedate","menuItems","MenuItem_default","drag","select","handleChangeStatus","SelectProps","MenuProps","menu","Tune_default","leftIcon","NewTask","duedate","user","handleChangeDescription","handleSendTask","getItem","response","componentDidMount","Create_default","newTask","owner","TaskPlannerDrawer","handleDrawerOpen","handleDrawerClose","handleChangeIsLoggedIn","updateTasks","_this3","components_Task","err","AppBar_AppBar","classNames","appBar","defineProperty","appBarShift","disableGutters","aria-label","hide","Menu_default","noWrap","toolbarTitle","components_NewTask","components_Filter","Drawer_default","drawer","anchor","paper","drawerPaper","drawerHeader","ChevronLeft_default","Divider_default","userData","src","userIcon","alt","List_default","ListItem_default","handleProfilePage","ListItemIcon_default","Person_default","ListItemText_default","primary","ExitIcon","contentShift","minWidth","display","transition","transitions","create","easing","sharp","duration","leavingScreen","concat","easeOut","enteringScreen","flexShrink","objectSpread","alignItems","padding","mixins","toolbar","justifyContent","flex","TaskPlanner","components_TaskPlannerDrawer","UserProfile","handleChangeProfile","iconButton","textfields","parse","list","App","routesNoLogged","path","component","components_Login","pathsLogged","components_TaskPlanner","components_UserProfile","Route","pathsNoLogged","exact","isLogged","BrowserRouter","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","ReactDOM","render","src_App_0","URL","process","origin","addEventListener","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.943af32c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/user.04d79fe9.png\";","module.exports = __webpack_public_path__ + \"static/media/baseline-exit_to_app-24px.63002100.svg\";","module.exports = __webpack_public_path__ + \"static/media/loginIcon.e56b8419.png\";","import React, {Component} from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Button from \"@material-ui/core/Button\";\n\nconst styles = {\n    root: {\n        flexGrow: 1,\n    },\n    grow: {\n        flexGrow: 1,\n        textAlign: \"left\"\n    },\n    menuButton: {\n        marginLeft: -12,\n        marginRight: 20,\n    },\n}\n\nclass AppBarPage extends Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n\n        const {classes} = this.props;\n\n        return (\n            <div>\n                <AppBar position=\"static\">\n                    <Toolbar>\n                        {this.props.button}\n                        <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\n                            Task Planner\n                        </Typography>\n                    </Toolbar>\n                </AppBar>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(AppBarPage);","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport withStyles from \"@material-ui/core/styles/withStyles\";\n\nconst styles = theme => ({\n    dialog: {\n        textAlign: \"center\"\n    }, margin: {\n        margin: theme.spacing.unit,\n    }\n});\n\nclass FormDialog extends React.Component {\n    state = {\n        open: false,\n    };\n\n    handleClickOpen = () => {\n        this.setState({open: true});\n    };\n\n    handleClose = () => {\n        this.setState({open: false});\n    };\n\n    render() {\n\n        const {classes} = this.props;\n\n        return (\n            <div>\n                <Button\n                    color={this.props.color}\n                    className={classes.margin}\n                    onClick={this.handleClickOpen}\n                    variant={this.props.variant}\n                    size={this.props.size}\n                >\n                    {this.props.modalButton}\n                    {this.props.textButton}\n                </Button>\n                <Dialog\n                    fullWidth={true}\n                    open={this.state.open}\n                    onClose={this.handleClose}\n                    aria-labelledby=\"form-dialog-title\"\n                    className={classes.dialog}\n                >\n                    <DialogTitle id=\"form-dialog-title\">\n                        {this.props.title}\n                    </DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {this.props.dialogContent}\n                        </DialogContentText>\n                        {this.props.form}\n                    </DialogContent>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(FormDialog);","import React, {Component} from 'react';\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport TextField from '@material-ui/core/TextField';\nimport Button from \"@material-ui/core/Button\";\nimport SimpleModal from \"./SimpleModal\";\nimport AccountCircle from '@material-ui/icons/AccountCircle';\n\nconst styles = {\n    button: {\n        width: '70%'\n    },\n    text: {\n        width: '90%'\n    }\n}\n\nclass LoginForm extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            userName: \"\",\n            password: \"\"\n        }\n\n        this.handleChangePassword = this.handleChangePassword.bind(this);\n        this.handleChangeUser = this.handleChangeUser.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n\n    }\n\n    handleChangeUser(e) {\n        this.setState({userName: e.target.value})\n    }\n\n    handleChangePassword(e) {\n        this.setState({password: e.target.value})\n    }\n\n    handleSubmit(e) {\n\n        e.preventDefault();\n\n        (async () => {\n            const rawResponse = await fetch('https://task-planner-api.herokuapp.com/user/username/' + this.state.userName);\n\n            try {\n                const content = await rawResponse.json();\n                console.log(content)\n                if (content.password === this.state.password) {\n                    localStorage.setItem(\"userLogged\", content.identification);\n                    localStorage.setItem(\"isLoggedIn\", \"true\");\n                    window.location.href = \"/tasks\";\n                } else {\n                    alert(\"User or password incorrect\");\n                }\n            } catch (err) {\n                alert(\"There is no users with that username\");\n                document.getElementById(\"loginForm\").reset();\n            }\n        })();\n    }\n\n    render() {\n\n        const {classes} = this.props;\n\n        const fields = [\n            {\n                field: \"Username\",\n                onChange: this.handleChangeUser,\n                type: \"text\",\n                id: \"user\",\n                className: classes.text\n            }, {\n                field: \"Password\",\n                onChange: this.handleChangePassword,\n                type: \"password\",\n                id: \"password\",\n                className: classes.text\n            }\n        ]\n\n        const textFields = fields.map((x, i) => {\n            return (\n                <TextField\n                    required\n                    id={x.id}\n                    label={x.field}\n                    margin=\"normal\"\n                    className={x.className}\n                    variant=\"outlined\"\n                    onChange={x.onChange}\n                    type={x.type}\n                />\n            );\n        });\n\n        const formButton = (\n            <Button\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.button}\n                type=\"submit\"\n            >\n                Sign In\n            </Button>\n        );\n\n        const form = (\n            <form\n                id=\"loginForm\"\n                className={classes.form}\n                onSubmit={this.handleSubmit}\n            >\n                {textFields}\n                {formButton}\n            </form>\n        );\n\n        return (\n            <>\n                <SimpleModal\n                    title=\"Sign In\"\n                    dialogContent=\"Login to your tasks account\"\n                    form={form}\n                    textButton=\"Sign In\"\n                    variant=\"contained\"\n                    size=\"large\"\n                    color=\"primary\"\n                />\n            </>\n        );\n    }\n}\n\nexport default withStyles(styles)(LoginForm);","import React, {Component} from 'react';\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ArrowBack from '@material-ui/icons/ArrowBack';\nimport AppBarPage from \"./AppBar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from '@material-ui/core/TextField';\nimport Button from \"@material-ui/core/Button\";\nimport SimpleModal from \"./SimpleModal\";\nimport Mood from '@material-ui/icons/Mood';\n\nconst styles = theme => ({\n    backButton: {\n        marginLeft: -12,\n        marginRight: 20\n    },\n    text: {\n        width: \"90%\"\n    },\n    button: {\n        width: '70%'\n    }\n});\n\nclass RegisterPage extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            users: [],\n            fullname: '',\n            email: '',\n            username: '',\n            id: '',\n            phone: 0,\n            password: ''\n        }\n\n        this.handleChangeFullName = this.handleChangeFullName.bind(this);\n        this.handleChangeEmail = this.handleChangeEmail.bind(this);\n        this.handleChangeUsername = this.handleChangeUsername.bind(this);\n        this.handleChangeId = this.handleChangeId.bind(this);\n        this.handleChangePhone = this.handleChangePhone.bind(this);\n        this.handleChangePassword = this.handleChangePassword.bind(this);\n        this.handleChangeOccupation = this.handleChangeOccupation.bind(this);\n        this.handleSendRegister = this.handleSendRegister.bind(this);\n    }\n\n    render() {\n\n        const {classes} = this.props;\n\n        const iconButton = (\n            <IconButton\n                className={classes.backButton}\n                onClick={this.handleBackPage}\n            >\n                <ArrowBack/>\n            </IconButton>\n        );\n\n        const fields = [\n            {\n                field: \"Full name\",\n                onchange: this.handleChangeFullName,\n                type: \"text\"\n            }, {\n                field: \"Your email\",\n                onchange: this.handleChangeEmail,\n                type: \"text\"\n            }, {\n                field: \"Username\",\n                onchange: this.handleChangeUsername,\n                type: \"text\"\n            }, {\n                field: \"Identification\",\n                onchange: this.handleChangeId,\n                type: \"text\"\n            }, {\n                field: \"Phone number\",\n                onchange: this.handleChangePhone,\n                type: \"number\"\n            }, {\n                field: \"Occupation\",\n                onchange: this.handleChangeOccupation,\n                type: \"text\"\n            }, {\n                field: \"Password\",\n                onchange: this.handleChangePassword,\n                type: \"password\"\n            }\n        ];\n\n        const textFields = fields.map((x, i) => {\n            return (\n                <>\n                    <TextField\n                        required\n                        key={i}\n                        label={x.field}\n                        onChange={x.onchange}\n                        margin=\"normal\"\n                        className={classes.text}\n                        variant=\"outlined\"\n                        type={x.type}\n                        defaultValue={x.default}\n                    />\n                    <br/>\n                </>\n            );\n        });\n\n        const formButton = (\n            <Button\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.button}\n                type=\"submit\"\n            >\n                Send\n            </Button>\n        );\n\n        const form = (\n            <form className={classes.form} onSubmit={this.handleSendRegister}>\n                {textFields}\n                {formButton}\n            </form>\n        );\n\n        return (\n            <>\n                <SimpleModal\n                    title=\"Register\"\n                    dialogContent=\"Create your tasks account, it's free!\"\n                    form={form}\n                    textButton=\"Sign Up\"\n                    variant=\"contained\"\n                    size=\"large\"\n                    color=\"primary\"\n                />\n            </>\n        );\n    }\n\n    handleBackPage() {\n        window.location.href = \"/\"\n    }\n\n    handleChangeFullName(e) {\n        this.setState({fullname: e.target.value});\n    }\n\n    handleChangeEmail(e) {\n        this.setState({email: e.target.value});\n    }\n\n    handleChangeUsername(e) {\n        this.setState({username: e.target.value});\n    }\n\n    handleChangeId(e) {\n        this.setState({id: e.target.value});\n    }\n\n    handleChangePhone(e) {\n        this.setState({phone: e.target.value});\n    }\n\n    handleChangePassword(e) {\n        this.setState({password: e.target.value});\n    }\n\n    handleChangeOccupation(e) {\n        this.setState({occupation: e.target.value});\n    }\n\n    handleSendRegister(e) {\n\n        e.preventDefault();\n\n        const newUser = {\n            identification: this.state.id,\n            fullName: this.state.fullname,\n            email: this.state.email,\n            userName: this.state.username,\n            phoneNumber: this.state.phone,\n            occupation: this.state.occupation,\n            password: this.state.password\n        };\n\n        fetch(\"https://task-planner-api.herokuapp.com/user/new\",\n            {\n                method: \"POST\",\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json',\n                    \"Access-Control-Allow-Origin\": \"*\",\n                    \"Access-Control-Allow-Credentials\": true\n                },\n                body: JSON.stringify(newUser)\n            })\n            .then(function (res) {\n                return res.json();\n            })\n            .then(function (data) {\n                alert(JSON.stringify(data))\n            })\n\n        setTimeout(\n            function () {\n                window.location.href = \"/\";\n            }, 1000);\n\n    }\n}\n\nexport default withStyles(styles)(RegisterPage);","import React, {Component} from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport loginIcon from '../images/loginIcon.png';\nimport AppBarPage from \"./AppBar\";\nimport LoginForm from \"./LoginForm\";\nimport RegisterPage from \"./RegisterPage\";\n\nconst styles = theme => ({});\n\nclass Login extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {}\n    }\n\n    render() {\n\n        const {classes} = this.props;\n\n        return (\n            <>\n                <AppBarPage/>\n                <LoginForm/>\n                <RegisterPage/>\n            </>\n        );\n    }\n}\n\nexport default withStyles(styles)(Login);","import React, {Component} from 'react';\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\n\nconst styles = theme => ({\n    card: {\n        width: \"100%\",\n        marginBottom: \"1%\",\n        float: \"left\"\n    }\n});\n\nclass Task extends Component {\n\n    render() {\n\n        const {classes} = this.props;\n\n        return (\n            <Card className={classes.card}>\n                <CardContent>\n                    <Typography variant=\"h5\" gutterBottom>\n                        <b>Responsible:</b> {this.props.tasks.responsible}\n                    </Typography>\n                    <Typography variant=\"subtitle1\" gutterBottom>\n                        <b>Description:</b> {this.props.tasks.description}\n                    </Typography>\n                    <Typography variant=\"subtitle1\" gutterBottom>\n                        <b>Date:</b> {this.props.tasks.dueDate}\n                    </Typography>\n                    <Typography variant=\"subtitle1\" gutterBottom>\n                        <b>Status:</b> {this.props.tasks.status}\n                    </Typography>\n                </CardContent>\n            </Card>\n        );\n    }\n}\n\nexport default withStyles(styles)(Task);","import React, {Component} from 'react';\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Button from \"@material-ui/core/Button\";\nimport Tune from '@material-ui/icons/Tune';\nimport SimpleModal from \"./SimpleModal\";\n\nconst styles = theme => ({\n    text: {\n        width: \"90%\"\n    }, button: {\n        width: \"70%\"\n    }, leftIcon: {\n        marginRight: theme.spacing.unit,\n    }\n})\n\nclass Filter extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {}\n    }\n\n    render() {\n\n        const {classes} = this.props;\n\n        const fields = [\n            {\n                field: \"Responsible\",\n                onchange: this.handleChangeResponsible,\n                type: \"text\"\n            }, {\n                field: \"Duedate\",\n                onchange: this.handleChangeDuedate,\n                type: \"date\",\n                default: \"2019-01-01\"\n            }];\n\n        const textFields = fields.map((x, i) => {\n            return (\n                <>\n                    <TextField\n                        required\n                        key={i}\n                        label={x.field}\n                        onChange={x.onchange}\n                        margin=\"normal\"\n                        className={classes.text}\n                        variant=\"outlined\"\n                        type={x.type}\n                        defaultValue={x.default}\n                    />\n                    <br/>\n                </>\n            );\n        });\n\n        const options = [\"In progress\", \"Ready\", \"Completed\"]\n\n        const menuItems = options.map((x) => {\n            return (\n                <MenuItem value={x}>\n                    {x}\n                </MenuItem>\n            );\n        });\n\n        const drag = (\n            <TextField\n                select\n                required\n                margin=\"normal\"\n                label=\"Status\"\n                className={classes.text}\n                value={this.state.status}\n                onChange={this.handleChangeStatus}\n                SelectProps={{\n                    MenuProps: {\n                        className: classes.menu,\n                    },\n                }}\n                variant=\"outlined\"\n            >\n                {menuItems}\n            </TextField>\n        );\n\n        const button = (\n            <Button\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.button}\n                type=\"submit\"\n            >\n                Filter\n            </Button>\n        )\n\n        const form = (\n            <form>\n                {textFields}\n                {drag}\n                {button}\n            </form>\n        );\n\n        const modalButton = (\n            <Tune className={classes.leftIcon}/>\n        );\n\n        return (\n            <>\n                <SimpleModal\n                    title=\"Filter\"\n                    form={form}\n                    dialogContent=\"Here you can filter your tasks to show them by Date, Responsible or Status\"\n                    modalButton={modalButton}\n                    color=\"inherit\"\n                />\n            </>\n        );\n    }\n\n}\n\nexport default withStyles(styles)(Filter);","import React, {Component} from 'react';\nimport ArrowBack from '@material-ui/icons/ArrowBack';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport TextField from '@material-ui/core/TextField';\nimport Button from \"@material-ui/core/Button\";\nimport 'typeface-roboto';\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Create from '@material-ui/icons/Create';\nimport SimpleModal from \"./SimpleModal\";\n\nconst styles = theme => ({\n    text: {\n        width: '90%',\n        textAlign: \"left\",\n    },\n    button: {\n        width: '70%'\n    }, leftIcon: {\n        marginRight: theme.spacing.unit,\n    }\n});\n\nclass NewTask extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            description: '',\n            responsible: '',\n            status: '',\n            duedate: '',\n            user: '',\n            tasks: []\n        };\n\n        this.handleChangeDuedate = this.handleChangeDuedate.bind(this);\n        this.handleChangeResponsible = this.handleChangeResponsible.bind(this);\n        this.handleChangeDescription = this.handleChangeDescription.bind(this);\n        this.handleChangeStatus = this.handleChangeStatus.bind(this);\n        this.handleSendTask = this.handleSendTask.bind(this);\n    }\n\n    componentDidMount() {\n        fetch('https://task-planner-api.herokuapp.com/user/userid/' + localStorage.getItem(\"userLogged\"))\n            .then(response => response.json())\n            .then(data => {\n                this.state.user = data;\n                this.state.tasks = data.tasks;\n            });\n    }\n\n    render() {\n\n        {\n            this.componentDidMount()\n        }\n\n        const {classes} = this.props;\n\n        const iconButton = (\n            <IconButton\n                className={classes.backButton}\n                onClick={this.handleBackPage}\n            >\n                <ArrowBack/>\n            </IconButton>\n        );\n\n        const fields = [\n            {\n                field: \"Description\",\n                onchange: this.handleChangeDescription,\n                type: \"text\"\n\n            }, {\n                field: \"Responsible\",\n                onchange: this.handleChangeResponsible,\n                type: \"text\"\n            }, {\n                field: \"Duedate\",\n                onchange: this.handleChangeDuedate,\n                type: \"date\",\n                default: \"2019-01-01\"\n            }];\n\n        const textFields = fields.map((x, i) => {\n            return (\n                <>\n                    <TextField\n                        required\n                        key={i}\n                        label={x.field}\n                        onChange={x.onchange}\n                        margin=\"normal\"\n                        className={classes.text}\n                        variant=\"outlined\"\n                        type={x.type}\n                        defaultValue={x.default}\n                    />\n                    <br/>\n                </>\n            );\n        });\n\n        const options = [\"In progress\", \"Ready\", \"Completed\"]\n\n        const menuItems = options.map((x) => {\n            return (\n                <MenuItem value={x}>\n                    {x}\n                </MenuItem>\n            );\n        });\n\n        const drag = (\n            <TextField\n                select\n                required\n                margin=\"normal\"\n                label=\"Status\"\n                className={classes.text}\n                value={this.state.status}\n                onChange={this.handleChangeStatus}\n                SelectProps={{\n                    MenuProps: {\n                        className: classes.menu,\n                    },\n                }}\n                variant=\"outlined\"\n            >\n                {menuItems}\n            </TextField>\n        );\n\n        const button = (\n            <Button\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.button}\n                type=\"submit\"\n            >\n                Send\n            </Button>\n        );\n\n        const form = (\n            <form className={classes.form} onSubmit={this.handleSendTask}>\n                {textFields}\n                {drag}\n                {button}\n            </form>\n        );\n\n        const modalButton = (\n            <Create className={classes.leftIcon}/>\n        );\n\n        return (\n            <>\n                <SimpleModal\n                    title=\"New task\"\n                    dialogContent=\"Create your new task\"\n                    form={form}\n                    modalButton={modalButton}\n                    color=\"inherit\"\n                />\n            </>\n        );\n    }\n\n    handleBackPage() {\n        window.location.href = '/tasks';\n    }\n\n    handleChangeDescription(e) {\n        this.setState({description: e.target.value});\n    }\n\n    handleChangeResponsible(e) {\n        this.setState({responsible: e.target.value});\n    }\n\n    handleChangeStatus(e) {\n        this.setState({status: e.target.value});\n    }\n\n    handleChangeDuedate(e) {\n        this.setState({duedate: e.target.value});\n    }\n\n    handleSendTask(e) {\n\n        e.preventDefault();\n\n        const newTask = {\n            owner: this.state.user.identification,\n            description: this.state.description,\n            responsible: this.state.responsible,\n            status: this.state.status,\n            dueDate: this.state.duedate\n        };\n\n        fetch(\"https://task-planner-api.herokuapp.com/task/newtask\",\n            {\n                method: \"POST\",\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json',\n                    \"Access-Control-Allow-Origin\": \"*\",\n                    \"Access-Control-Allow-Credentials\": true\n                },\n                body: JSON.stringify(newTask)\n            })\n            .then(function (res) {\n                return res.json();\n            })\n            .then(function (data) {\n                alert(JSON.stringify(data))\n            })\n\n        setTimeout(\n            function () {\n                window.location.href = \"/tasks\";\n            }, 1000);\n\n    }\n}\n\nexport default withStyles(styles)(NewTask);","import React, {Component} from 'react';\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport AppBar from \"@material-ui/core/es/AppBar\";\nimport classNames from 'classnames';\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Card from \"@material-ui/core/Card\";\nimport userIcon from \"../images/user.png\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ExitIcon from \"../images/baseline-exit_to_app-24px.svg\";\nimport Task from \"./Task\";\nimport Person from '@material-ui/icons/Person';\nimport ModalFilter from \"./Filter\";\nimport ModalNewTask from \"./NewTask\"\n\n\nconst drawerWidth = 350;\n\nconst styles = theme => ({\n    card: {\n        minWidth: 275,\n    },\n    root: {\n        display: 'flex',\n    },\n    appBar: {\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarShift: {\n        width: `calc(100% - ${drawerWidth}px)`,\n        marginLeft: drawerWidth,\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButton: {\n        marginLeft: 12,\n        marginRight: 20,\n    },\n    hide: {\n        display: 'none',\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n    },\n    drawerPaper: {\n        width: drawerWidth,\n    },\n    drawerHeader: {\n        display: 'flex',\n        alignItems: 'center',\n        padding: '0 8px',\n        ...theme.mixins.toolbar,\n        justifyContent: 'flex-end',\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing.unit * 3,\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        marginLeft: -drawerWidth,\n    },\n    contentShift: {\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n        marginLeft: 0,\n    },\n    userIcon: {\n        width: '30%'\n    },\n    grow: {\n        flexGrow: 1,\n    },\n    button: {\n        marginRight: 20\n    }, leftIcon: {\n        marginRight: theme.spacing.unit,\n    },\n    toolbarTitle: {\n        flex: 1,\n        textAlign: \"left\"\n    }\n});\n\nclass TaskPlannerDrawer extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            open: false,\n            tasks: [],\n            user: {}\n        };\n\n        this.handleChangeIsLoggedIn = this.handleChangeIsLoggedIn.bind(this);\n        this.componentDidMount = this.componentDidMount.bind(this);\n        this.updateTasks = this.updateTasks.bind(this);\n    };\n\n    componentDidMount() {\n        fetch('https://task-planner-api.herokuapp.com/user/userid/' + localStorage.getItem(\"userLogged\"))\n            .then(response => response.json())\n            .then(data => {\n                this.setState({user: data})\n            });\n        this.updateTasks();\n    }\n\n    updateTasks() {\n        fetch('https://task-planner-api.herokuapp.com/task/user/' + localStorage.getItem(\"userLogged\"))\n            .then(response => response.json())\n            .then(data => {\n                this.setState({tasks: data})\n            });\n    }\n\n    render() {\n\n        let user = this.state.user;\n\n        const {classes} = this.props;\n\n        const {open} = this.state;\n\n        let tasks;\n\n        try {\n            tasks = this.state.tasks.map((x, i) => {\n                return (\n                    <Task\n                        key={i}\n                        tasks={x}\n                    />\n                );\n            });\n        } catch (err) {\n            tasks = []\n        }\n\n        return (\n            <div className={classes.root}>\n                <AppBar\n                    position=\"fixed\"\n                    className={classNames(classes.appBar, {\n                        [classes.appBarShift]: open,\n                    })}\n                >\n                    <Toolbar disableGutters={!open}>\n                        <IconButton\n                            color=\"inherit\"\n                            aria-label=\"Open drawer\"\n                            onClick={this.handleDrawerOpen}\n                            className={classNames(classes.menuButton, open && classes.hide)}\n                        >\n                            <MenuIcon/>\n                        </IconButton>\n                        <Typography variant=\"h6\" color=\"inherit\" noWrap className={classes.toolbarTitle}>\n                            Task planner\n                        </Typography>\n                        <ModalNewTask/>\n                        <ModalFilter/>\n                    </Toolbar>\n                </AppBar>\n                <Drawer\n                    className={classes.drawer}\n                    variant=\"persistent\"\n                    anchor=\"left\"\n                    open={open}\n                    classes={{\n                        paper: classes.drawerPaper,\n                    }}\n                >\n                    <div className={classes.drawerHeader}>\n                        <IconButton onClick={this.handleDrawerClose}>\n                            <ChevronLeftIcon/>\n                        </IconButton>\n                    </div>\n                    <Divider/>\n                    <div className={classes.userData}>\n                        <Card className={classes.card}>\n                            <CardContent>\n                                <img src={userIcon} className={classes.userIcon} alt=\"\"/>\n                                <Typography variant=\"subtitle2\" gutterBottom>\n                                    <b>{user.fullName}</b>\n                                </Typography>\n                                <Typography variant=\"body1\" gutterBottom>\n                                    <b>Email: </b>{user.email}\n                                </Typography>\n                                <Typography variant=\"body1\" gutterBottom>\n                                    <b>Occupation: </b> {user.occupation}\n                                </Typography>\n                                <Typography variant=\"body1\" gutterBottom>\n                                    <b>Cellphone:</b> {user.phoneNumber}\n                                </Typography>\n                            </CardContent>\n                        </Card>\n                        <List>\n                            <ListItem\n                                button\n                                onClick={this.handleProfilePage}\n                            >\n                                <ListItemIcon>\n                                    <Person/>\n                                </ListItemIcon>\n                                <ListItemText primary=\"Profile\"/>\n                            </ListItem>\n                            <ListItem\n                                button\n                                onClick={this.handleChangeIsLoggedIn}\n                            >\n                                <ListItemIcon>\n                                    <img src={ExitIcon} alt=\"\"/>\n                                </ListItemIcon>\n                                <ListItemText primary=\"Logout\"/>\n                            </ListItem>\n                        </List>\n                    </div>\n                </Drawer>\n                <main\n                    className={classNames(classes.content, {\n                        [classes.contentShift]: open,\n                    })}\n                >\n                    <div className={classes.drawerHeader}/>\n                    {tasks}\n                </main>\n            </div>\n        );\n    }\n\n    handleDrawerOpen = () => {\n        this.setState({open: true});\n    };\n\n    handleDrawerClose = () => {\n        this.setState({open: false});\n    };\n\n    handleChangeIsLoggedIn() {\n        localStorage.setItem(\"isLoggedIn\", \"false\");\n        window.location.href = '/';\n    }\n\n    handleProfilePage() {\n        window.location.href = \"/profile\"\n    }\n\n    handleNewTask() {\n        window.location.href = \"/newtask\"\n    }\n}\n\nexport default withStyles(styles)(TaskPlannerDrawer);","import React, {Component} from 'react';\nimport TaskPlannerDrawer from './TaskPlannerDrawer';\n\n//const styles = theme => ({});\n\nclass TaskPlanner extends Component {\n\n    render() {\n\n        //const {classes} = this.props;\n\n        return (\n            <div>\n                <TaskPlannerDrawer/>\n            </div>\n        );\n    }\n}\n\nexport default TaskPlanner;","import React, {Component} from 'react';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ArrowBack from '@material-ui/icons/ArrowBack';\nimport AppBarPage from \"./AppBar\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Typography from \"@material-ui/core/Typography\"\nimport TextField from '@material-ui/core/TextField';\nimport Button from \"@material-ui/core/Button\";\n\nconst styles = theme => ({\n    backButton: {\n        marginLeft: -12,\n        marginRight: 20\n    },\n    text: {\n        width: \"30%\"\n    },\n    button: {\n        width: \"30%\"\n    }\n});\n\nclass UserProfile extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            fullname: '',\n            email: '',\n            phone: 0,\n            occupation: '',\n            password: ''\n        }\n\n        this.handleChangeFullName = this.handleChangeFullName.bind(this);\n        this.handleChangeEmail = this.handleChangeEmail.bind(this);\n        this.handleChangePhone = this.handleChangePhone.bind(this);\n        this.handleChangeOccupation = this.handleChangeOccupation.bind(this);\n        this.handleChangePassword = this.handleChangePassword.bind(this);\n        this.handleChangeProfile = this.handleChangeProfile.bind(this);\n    }\n\n    render() {\n\n        const {classes} = this.props;\n\n        const iconButton = (\n            <IconButton\n                className={classes.backButton}\n                onClick={this.handleBackPage}\n            >\n                <ArrowBack/>\n            </IconButton>\n        );\n\n        const fields = [\n            {\n                field: \"New full name\",\n                onchange: this.handleChangeFullName,\n                type: \"text\"\n            },\n            {\n                field: \"New email\",\n                onchange: this.handleChangeEmail,\n                type: \"text\"\n            },\n            {\n                field: \"New phone number\",\n                onchange: this.handleChangePhone,\n                type: \"number\"\n            },\n            {\n                field: \"New occupation\",\n                onchange: this.handleChangeOccupation,\n                type: \"text\"\n            },\n            {\n                field: \"New password\",\n                onchange: this.handleChangePassword,\n                type: \"password\"\n            }\n        ];\n\n        const textfields = fields.map((x, i) => {\n            return (\n                <>\n                    <TextField\n                        required\n                        key={i}\n                        label={x.field}\n                        onChange={x.onchange}\n                        margin=\"normal\"\n                        className={classes.text}\n                        variant=\"outlined\"\n                        type={x.type}\n                        defaultValue={x.default}\n                    />\n                    <br/>\n                </>\n            );\n        });\n\n        return (\n            <>\n                <AppBarPage button={iconButton}/>\n                <br/>\n                <br/>\n                <Typography variant=\"h2\" gutterBottom>\n                    Update your profile\n                </Typography>\n                <form className={classes.form} onSubmit={this.handleChangeProfile}>\n                    {textfields}\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.button}\n                        type=\"submit\"\n                    >\n                        Update profile\n                    </Button>\n                </form>\n\n            </>\n        );\n    };\n\n    handleBackPage() {\n        window.location.href = \"/tasks\"\n    }\n\n    handleChangeFullName(e) {\n        this.setState({fullname: e.target.value});\n    }\n\n    handleChangeEmail(e) {\n        this.setState({email: e.target.value});\n    }\n\n    handleChangePhone(e) {\n        this.setState({phone: e.target.value});\n    }\n\n    handleChangeOccupation(e) {\n        this.setState({occupation: e.target.value});\n    }\n\n    handleChangePassword(e) {\n        this.setState({password: e.target.value});\n    }\n\n    handleChangeProfile(e) {\n\n        e.preventDefault();\n\n        let users = JSON.parse(localStorage.getItem(\"users\"));\n\n        for (let x in users.list) {\n            if (localStorage.getItem(\"userLogged\") === users.list[x].username) {\n                users.list[x].fullname = this.state.fullname;\n                users.list[x].email = this.state.email;\n                users.list[x].phone = this.state.phone;\n                users.list[x].occupation = this.state.occupation;\n                users.list[x].password = this.state.password;\n            }\n        }\n\n        localStorage.setItem(\"users\", JSON.stringify(users));\n\n        alert(\"Profile updated\");\n\n        window.location.href = \"/tasks\"\n\n    }\n}\n\nexport default withStyles(styles)(UserProfile);","import React, {Component} from 'react';\nimport Login from './components/Login';\nimport './App.css';\nimport TaskPlanner from \"./components/TaskPlanner\";\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\nimport NewTask from \"./components/NewTask\";\nimport UserProfile from \"./components/UserProfile\";\nimport RegisterPage from \"./components/RegisterPage\";\n\nclass App extends Component {\n\n    render() {\n\n        const loginView = () => (\n            <div>\n                <Login/>\n            </div>\n        );\n\n        const taskPlannerView = () => (\n            <div>\n                <TaskPlanner/>\n            </div>\n        );\n\n        const newTaskView = () => (\n            <NewTask/>\n        );\n\n        const userProfileView = () => (\n            <UserProfile/>\n        );\n\n        const registerPageView = () => (\n            <RegisterPage/>\n        );\n\n        const routesLogged = [\n            {\n                path: \"/tasks\",\n                component: taskPlannerView\n            }, {\n                path: \"/profile\",\n                component: userProfileView\n            }\n        ];\n\n        const routesNoLogged = [\n            {\n                path: \"/\",\n                component: loginView\n            }\n        ];\n\n        const pathsLogged = routesLogged.map((x, i) => {\n            return (\n                <Route\n                    path={x.path}\n                    component={x.component}\n                    key={i}\n                />\n            );\n        });\n\n        const pathsNoLogged = routesNoLogged.map((x, i) => {\n            return (\n                <Route\n                    exact\n                    path={x.path}\n                    component={x.component}\n                    key={i}\n                />\n            );\n        });\n\n        const isLogged = localStorage.getItem('isLoggedIn');\n\n        return (\n            <Router>\n                <div className=\"App\">\n                    {isLogged === \"true\" ? pathsLogged : pathsNoLogged}\n                </div>\n            </Router>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('install', () => {\n            console.log(\"install!!\");\n        });\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit http://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport firebase from 'firebase';\n\nconst config = {\n    apiKey: \"AIzaSyAFPNr5dBlaiLb1QJqp1YOTNRIGzn0QLpQ\",\n    authDomain: \"task-planner-app-f396d.firebaseapp.com\",\n    databaseURL: \"https://task-planner-app-f396d.firebaseio.com\",\n    projectId: \"task-planner-app-f396d\",\n    storageBucket: \"task-planner-app-f396d.appspot.com\",\n    messagingSenderId: \"495126587051\"\n};\nfirebase.initializeApp(config);\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}