{"version":3,"sources":["images/loginIcon.png","images/user.png","images/baseline-exit_to_app-24px.svg","components/Login.js","components/AppBar.js","components/Task.js","components/SimpleModal.js","components/Filter.js","components/NewTask.js","components/TaskPlannerDrawer.js","components/TaskPlanner.js","components/UserProfile.js","components/RegisterPage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Login","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","user","password","handleChangeUser","bind","assertThisInitialized","handleChangePassword","handleSubmit","handleRegisterPage","classes","react_default","a","createElement","src","loginIcon","className","image","alt","id","form","onSubmit","TextField_default","required","label","margin","text","variant","onChange","type","Button_default","color","button","onClick","e","setState","target","value","_this2","preventDefault","asyncToGenerator","regenerator_default","mark","_callee","rawResponse","content","wrap","_context","prev","next","fetch","sent","json","console","log","localStorage","setItem","identification","window","location","href","alert","t0","document","getElementById","reset","stop","Component","withStyles","theme","width","marginTop","AppBarPage","AppBar_default","position","Toolbar_default","Typography_default","grow","root","flexGrow","textAlign","menuButton","marginLeft","marginRight","Task","Card_default","card","CardContent_default","gutterBottom","tasks","responsible","description","dueDate","status","marginBottom","float","FormDialog","open","handleClickOpen","handleClose","buttonFilter","modalButton","Dialog_default","fullWidth","onClose","aria-labelledby","dialog","DialogTitle_default","title","DialogContent_default","DialogContentText_default","dialogContent","React","Filter","textFields","field","onchange","handleChangeResponsible","handleChangeDuedate","default","map","x","i","Fragment","key","defaultValue","menuItems","MenuItem_default","drag","select","handleChangeStatus","SelectProps","MenuProps","menu","Tune_default","leftIcon","SimpleModal","spacing","unit","NewTask","duedate","handleChangeDescription","handleSendTask","getItem","then","response","data","componentDidMount","IconButton_default","backButton","handleBackPage","ArrowBack_default","Create_default","newTask","owner","method","headers","Accept","Content-Type","Access-Control-Allow-Origin","Access-Control-Allow-Credentials","body","JSON","stringify","res","setTimeout","TaskPlannerDrawer","handleDrawerOpen","handleDrawerClose","handleChangeIsLoggedIn","updateTasks","_this3","components_Task","err","AppBar_AppBar","classNames","appBar","defineProperty","appBarShift","disableGutters","aria-label","hide","Menu_default","noWrap","toolbarTitle","components_NewTask","components_Filter","Drawer_default","drawer","anchor","paper","drawerPaper","drawerHeader","ChevronLeft_default","Divider_default","userData","userIcon","fullName","email","occupation","phoneNumber","List_default","ListItem_default","handleProfilePage","ListItemIcon_default","Person_default","ListItemText_default","primary","ExitIcon","contentShift","minWidth","display","transition","transitions","create","easing","sharp","duration","leavingScreen","concat","easeOut","enteringScreen","flexShrink","objectSpread","alignItems","padding","mixins","toolbar","justifyContent","flex","TaskPlanner","components_TaskPlannerDrawer","UserProfile","fullname","phone","handleChangeFullName","handleChangeEmail","handleChangePhone","handleChangeOccupation","handleChangeProfile","iconButton","textfields","components_AppBar","users","parse","list","username","RegisterPage","handleChangeUsername","handleChangeId","handleSendRegister","newUser","userName","App","routesNoLogged","path","component","components_Login","components_RegisterPage","pathsLogged","components_TaskPlanner","components_UserProfile","Route","pathsNoLogged","exact","isLogged","BrowserRouter","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","ReactDOM","render","src_App_0","URL","process","origin","addEventListener","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.268c4fac.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loginIcon.e56b8419.png\";","module.exports = __webpack_public_path__ + \"static/media/user.04d79fe9.png\";","module.exports = __webpack_public_path__ + \"static/media/baseline-exit_to_app-24px.63002100.svg\";","import React, {Component} from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport loginIcon from '../images/loginIcon.png';\n\nconst styles = theme => ({\n    button: {\n        width: '30%'\n    },\n    text: {\n        width: '30%'\n    },\n    image: {\n        width: '10%',\n        marginTop: '3%'\n    }\n});\n\nclass Login extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            user: \"\",\n            password: \"\"\n        }\n\n        this.handleChangeUser = this.handleChangeUser.bind(this);\n        this.handleChangePassword = this.handleChangePassword.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleRegisterPage = this.handleRegisterPage.bind(this);\n    }\n\n    render() {\n        const {classes} = this.props;\n        return (\n            <div>\n                <br/>\n                <img\n                    src={loginIcon}\n                    className={classes.image}\n                    alt=\"\"\n                />\n                <br/>\n                <form\n                    id=\"loginForm\"\n                    className={classes.form}\n                    onSubmit={this.handleSubmit}\n                >\n                    <TextField\n                        required\n                        id=\"user\"\n                        label=\"User\"\n                        margin=\"normal\"\n                        className={classes.text}\n                        variant=\"outlined\"\n                        onChange={this.handleChangeUser}\n                    />\n                    <br/>\n                    <TextField\n                        required\n                        id=\"password\"\n                        label=\"Password\"\n                        type=\"password\"\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        className={classes.text}\n                        onChange={this.handleChangePassword}\n                    />\n                    <br/>\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.button}\n                        type=\"submit\"\n                    >\n                        Login\n                    </Button>\n                    <br/>\n                    <br/>\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.button}\n                        onClick={this.handleRegisterPage}\n                    >\n                        Sign up\n                    </Button>\n                </form>\n            </div>\n        );\n    }\n\n    handleChangeUser(e) {\n        this.setState({user: e.target.value});\n    }\n\n    handleChangePassword(e) {\n        this.setState({password: e.target.value})\n    }\n\n    handleSubmit(e) {\n\n        e.preventDefault();\n\n        (async () => {\n            const rawResponse = await fetch('https://task-planner-api.herokuapp.com/user/username/' + this.state.user);\n\n            try {\n                const content = await rawResponse.json();\n                console.log(content)\n                if (content.password === this.state.password) {\n                    localStorage.setItem(\"userLogged\", content.identification);\n                    localStorage.setItem(\"isLoggedIn\", \"true\");\n                    window.location.href = \"/tasks\";\n                } else {\n                    alert(\"User or password incorrect\");\n                }\n            } catch (err) {\n                alert(\"There is no users with that username\");\n                document.getElementById(\"loginForm\").reset();\n            }\n        })();\n    }\n\n    handleRegisterPage() {\n        window.location.href = \"/register\";\n    }\n}\n\nexport default withStyles(styles)(Login);","import React, {Component} from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Button from \"@material-ui/core/Button\";\n\nconst styles = {\n    root: {\n        flexGrow: 1,\n    },\n    grow: {\n        flexGrow: 1,\n        textAlign: \"left\"\n    },\n    menuButton: {\n        marginLeft: -12,\n        marginRight: 20,\n    },\n}\n\nclass AppBarPage extends Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n\n        const {classes} = this.props;\n\n        return (\n            <div>\n                <AppBar position=\"static\">\n                    <Toolbar>\n                        {this.props.button}\n                        <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\n                            Task Planner\n                        </Typography>\n                    </Toolbar>\n                </AppBar>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(AppBarPage);","import React, {Component} from 'react';\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\n\nconst styles = theme => ({\n    card: {\n        width: \"100%\",\n        marginBottom: \"1%\",\n        float: \"left\"\n    }\n});\n\nclass Task extends Component {\n\n    render() {\n\n        const {classes} = this.props;\n\n        return (\n            <Card className={classes.card}>\n                <CardContent>\n                    <Typography variant=\"h5\" gutterBottom>\n                        <b>Responsible:</b> {this.props.tasks.responsible}\n                    </Typography>\n                    <Typography variant=\"subtitle1\" gutterBottom>\n                        <b>Description:</b> {this.props.tasks.description}\n                    </Typography>\n                    <Typography variant=\"subtitle1\" gutterBottom>\n                        <b>Date:</b> {this.props.tasks.dueDate}\n                    </Typography>\n                    <Typography variant=\"subtitle1\" gutterBottom>\n                        <b>Status:</b> {this.props.tasks.status}\n                    </Typography>\n                </CardContent>\n            </Card>\n        );\n    }\n}\n\nexport default withStyles(styles)(Task);","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport withStyles from \"@material-ui/core/styles/withStyles\";\n\nconst styles = theme => ({\n    dialog: {\n        textAlign: \"center\"\n    }\n});\n\nclass FormDialog extends React.Component {\n    state = {\n        open: false,\n    };\n\n    handleClickOpen = () => {\n        this.setState({open: true});\n    };\n\n    handleClose = () => {\n        this.setState({open: false});\n    };\n\n    render() {\n\n        const {classes} = this.props;\n\n        return (\n            <div>\n                <Button\n                    color=\"inherit\"\n                    className={classes.buttonFilter}\n                    onClick={this.handleClickOpen}\n                >\n                    {this.props.modalButton}\n                </Button>\n                <Dialog\n                    fullWidth={true}\n                    open={this.state.open}\n                    onClose={this.handleClose}\n                    aria-labelledby=\"form-dialog-title\"\n                    className={classes.dialog}\n                >\n                    <DialogTitle id=\"form-dialog-title\">\n                        {this.props.title}\n                    </DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {this.props.dialogContent}\n                        </DialogContentText>\n                        {this.props.form}\n                    </DialogContent>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(FormDialog);","import React, {Component} from 'react';\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Button from \"@material-ui/core/Button\";\nimport Tune from '@material-ui/icons/Tune';\nimport SimpleModal from \"./SimpleModal\";\n\nconst styles = theme => ({\n    text: {\n        width: \"90%\"\n    }, button: {\n        width: \"70%\"\n    }, leftIcon: {\n        marginRight: theme.spacing.unit,\n    }\n})\n\nclass Filter extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {}\n    }\n\n    render() {\n\n        const {classes} = this.props;\n\n        const fields = [\n            {\n                field: \"Responsible\",\n                onchange: this.handleChangeResponsible,\n                type: \"text\"\n            }, {\n                field: \"Duedate\",\n                onchange: this.handleChangeDuedate,\n                type: \"date\",\n                default: \"2019-01-01\"\n            }];\n\n        const textFields = fields.map((x, i) => {\n            return (\n                <>\n                    <TextField\n                        required\n                        key={i}\n                        label={x.field}\n                        onChange={x.onchange}\n                        margin=\"normal\"\n                        className={classes.text}\n                        variant=\"outlined\"\n                        type={x.type}\n                        defaultValue={x.default}\n                    />\n                    <br/>\n                </>\n            );\n        });\n\n        const options = [\"In progress\", \"Ready\", \"Completed\"]\n\n        const menuItems = options.map((x) => {\n            return (\n                <MenuItem value={x}>\n                    {x}\n                </MenuItem>\n            );\n        });\n\n        const drag = (\n            <TextField\n                select\n                required\n                margin=\"normal\"\n                label=\"Status\"\n                className={classes.text}\n                value={this.state.status}\n                onChange={this.handleChangeStatus}\n                SelectProps={{\n                    MenuProps: {\n                        className: classes.menu,\n                    },\n                }}\n                variant=\"outlined\"\n            >\n                {menuItems}\n            </TextField>\n        );\n\n        const button = (\n            <Button\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.button}\n                type=\"submit\"\n            >\n                Filter\n            </Button>\n        )\n\n        const form = (\n            <form>\n                {textFields}\n                {drag}\n                {button}\n            </form>\n        );\n\n        const modalButton = (\n            <Tune className={classes.leftIcon}/>\n        );\n\n        return (\n            <>\n                <SimpleModal\n                    title=\"Filter\"\n                    form={form}\n                    dialogContent=\"Here you can filter your tasks to show them by Date, Responsible or Status\"\n                    modalButton={modalButton}\n                />\n            </>\n        );\n    }\n\n}\n\nexport default withStyles(styles)(Filter);","import React, {Component} from 'react';\nimport ArrowBack from '@material-ui/icons/ArrowBack';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport TextField from '@material-ui/core/TextField';\nimport Button from \"@material-ui/core/Button\";\nimport 'typeface-roboto';\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Create from '@material-ui/icons/Create';\nimport SimpleModal from \"./SimpleModal\";\n\nconst styles = theme => ({\n    text: {\n        width: '90%',\n        textAlign: \"left\",\n    },\n    button: {\n        width: '70%'\n    }, leftIcon: {\n        marginRight: theme.spacing.unit,\n    }\n});\n\nclass NewTask extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            description: '',\n            responsible: '',\n            status: '',\n            duedate: '',\n            user: '',\n            tasks: []\n        };\n\n        this.handleChangeDuedate = this.handleChangeDuedate.bind(this);\n        this.handleChangeResponsible = this.handleChangeResponsible.bind(this);\n        this.handleChangeDescription = this.handleChangeDescription.bind(this);\n        this.handleChangeStatus = this.handleChangeStatus.bind(this);\n        this.handleSendTask = this.handleSendTask.bind(this);\n    }\n\n    componentDidMount() {\n        fetch('https://task-planner-api.herokuapp.com/user/userid/' + localStorage.getItem(\"userLogged\"))\n            .then(response => response.json())\n            .then(data => {\n                this.state.user = data;\n                this.state.tasks = data.tasks;\n            });\n    }\n\n    render() {\n\n        {\n            this.componentDidMount()\n        }\n\n        const {classes} = this.props;\n\n        const iconButton = (\n            <IconButton\n                className={classes.backButton}\n                onClick={this.handleBackPage}\n            >\n                <ArrowBack/>\n            </IconButton>\n        );\n\n        const fields = [\n            {\n                field: \"Description\",\n                onchange: this.handleChangeDescription,\n                type: \"text\"\n\n            }, {\n                field: \"Responsible\",\n                onchange: this.handleChangeResponsible,\n                type: \"text\"\n            }, {\n                field: \"Duedate\",\n                onchange: this.handleChangeDuedate,\n                type: \"date\",\n                default: \"2019-01-01\"\n            }];\n\n        const textFields = fields.map((x, i) => {\n            return (\n                <>\n                    <TextField\n                        required\n                        key={i}\n                        label={x.field}\n                        onChange={x.onchange}\n                        margin=\"normal\"\n                        className={classes.text}\n                        variant=\"outlined\"\n                        type={x.type}\n                        defaultValue={x.default}\n                    />\n                    <br/>\n                </>\n            );\n        });\n\n        const options = [\"In progress\", \"Ready\", \"Completed\"]\n\n        const menuItems = options.map((x) => {\n            return (\n                <MenuItem value={x}>\n                    {x}\n                </MenuItem>\n            );\n        });\n\n        const drag = (\n            <TextField\n                select\n                required\n                margin=\"normal\"\n                label=\"Status\"\n                className={classes.text}\n                value={this.state.status}\n                onChange={this.handleChangeStatus}\n                SelectProps={{\n                    MenuProps: {\n                        className: classes.menu,\n                    },\n                }}\n                variant=\"outlined\"\n            >\n                {menuItems}\n            </TextField>\n        );\n\n        const button = (\n            <Button\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.button}\n                type=\"submit\"\n            >\n                Send\n            </Button>\n        );\n\n        const form = (\n            <form className={classes.form} onSubmit={this.handleSendTask}>\n                {textFields}\n                {drag}\n                {button}\n            </form>\n        );\n\n        const modalButton = (\n            <Create className={classes.leftIcon}/>\n        );\n\n        return (\n            <>\n                <SimpleModal\n                    title=\"New task\"\n                    dialogContent=\"Create your new task\"\n                    form={form}\n                    modalButton={modalButton}\n                />\n            </>\n        );\n    }\n\n    handleBackPage() {\n        window.location.href = '/tasks';\n    }\n\n    handleChangeDescription(e) {\n        this.setState({description: e.target.value});\n    }\n\n    handleChangeResponsible(e) {\n        this.setState({responsible: e.target.value});\n    }\n\n    handleChangeStatus(e) {\n        this.setState({status: e.target.value});\n    }\n\n    handleChangeDuedate(e) {\n        this.setState({duedate: e.target.value});\n    }\n\n    handleSendTask(e) {\n\n        e.preventDefault();\n\n        const newTask = {\n            owner: this.state.user.identification,\n            description: this.state.description,\n            responsible: this.state.responsible,\n            status: this.state.status,\n            dueDate: this.state.duedate\n        };\n\n        fetch(\"https://task-planner-api.herokuapp.com/task/newtask\",\n            {\n                method: \"POST\",\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json',\n                    \"Access-Control-Allow-Origin\": \"*\",\n                    \"Access-Control-Allow-Credentials\": true\n                },\n                body: JSON.stringify(newTask)\n            })\n            .then(function (res) {\n                return res.json();\n            })\n            .then(function (data) {\n                alert(JSON.stringify(data))\n            })\n\n        setTimeout(\n            function () {\n                window.location.href = \"/tasks\";\n            }, 1000);\n\n    }\n}\n\nexport default withStyles(styles)(NewTask);","import React, {Component} from 'react';\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport AppBar from \"@material-ui/core/es/AppBar\";\nimport classNames from 'classnames';\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Card from \"@material-ui/core/Card\";\nimport userIcon from \"../images/user.png\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ExitIcon from \"../images/baseline-exit_to_app-24px.svg\";\nimport Task from \"./Task\";\nimport Person from '@material-ui/icons/Person';\nimport ModalFilter from \"./Filter\";\nimport ModalNewTask from \"./NewTask\"\n\n\nconst drawerWidth = 350;\n\nconst styles = theme => ({\n    card: {\n        minWidth: 275,\n    },\n    root: {\n        display: 'flex',\n    },\n    appBar: {\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarShift: {\n        width: `calc(100% - ${drawerWidth}px)`,\n        marginLeft: drawerWidth,\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButton: {\n        marginLeft: 12,\n        marginRight: 20,\n    },\n    hide: {\n        display: 'none',\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n    },\n    drawerPaper: {\n        width: drawerWidth,\n    },\n    drawerHeader: {\n        display: 'flex',\n        alignItems: 'center',\n        padding: '0 8px',\n        ...theme.mixins.toolbar,\n        justifyContent: 'flex-end',\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing.unit * 3,\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        marginLeft: -drawerWidth,\n    },\n    contentShift: {\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n        marginLeft: 0,\n    },\n    userIcon: {\n        width: '30%'\n    },\n    grow: {\n        flexGrow: 1,\n    },\n    button: {\n        marginRight: 20\n    }, leftIcon: {\n        marginRight: theme.spacing.unit,\n    },\n    toolbarTitle: {\n        flex: 1,\n        textAlign: \"left\"\n    }\n});\n\nclass TaskPlannerDrawer extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            open: false,\n            tasks: [],\n            user: {}\n        };\n\n        this.handleChangeIsLoggedIn = this.handleChangeIsLoggedIn.bind(this);\n        this.componentDidMount = this.componentDidMount.bind(this);\n        this.updateTasks = this.updateTasks.bind(this);\n    };\n\n    componentDidMount() {\n        fetch('https://task-planner-api.herokuapp.com/user/userid/' + localStorage.getItem(\"userLogged\"))\n            .then(response => response.json())\n            .then(data => {\n                this.setState({user: data})\n            });\n        this.updateTasks();\n    }\n\n    updateTasks() {\n        fetch('https://task-planner-api.herokuapp.com/task/user/' + localStorage.getItem(\"userLogged\"))\n            .then(response => response.json())\n            .then(data => {\n                this.setState({tasks: data})\n            });\n    }\n\n    render() {\n\n        let user = this.state.user;\n\n        const {classes} = this.props;\n\n        const {open} = this.state;\n\n        let tasks;\n\n        try {\n            tasks = this.state.tasks.map((x, i) => {\n                return (\n                    <Task\n                        key={i}\n                        tasks={x}\n                    />\n                );\n            });\n        } catch (err) {\n            tasks = []\n        }\n\n        return (\n            <div className={classes.root}>\n                <AppBar\n                    position=\"fixed\"\n                    className={classNames(classes.appBar, {\n                        [classes.appBarShift]: open,\n                    })}\n                >\n                    <Toolbar disableGutters={!open}>\n                        <IconButton\n                            color=\"inherit\"\n                            aria-label=\"Open drawer\"\n                            onClick={this.handleDrawerOpen}\n                            className={classNames(classes.menuButton, open && classes.hide)}\n                        >\n                            <MenuIcon/>\n                        </IconButton>\n                        <Typography variant=\"h6\" color=\"inherit\" noWrap className={classes.toolbarTitle}>\n                            Task planner\n                        </Typography>\n                        <ModalNewTask/>\n                        <ModalFilter/>\n                    </Toolbar>\n                </AppBar>\n                <Drawer\n                    className={classes.drawer}\n                    variant=\"persistent\"\n                    anchor=\"left\"\n                    open={open}\n                    classes={{\n                        paper: classes.drawerPaper,\n                    }}\n                >\n                    <div className={classes.drawerHeader}>\n                        <IconButton onClick={this.handleDrawerClose}>\n                            <ChevronLeftIcon/>\n                        </IconButton>\n                    </div>\n                    <Divider/>\n                    <div className={classes.userData}>\n                        <Card className={classes.card}>\n                            <CardContent>\n                                <img src={userIcon} className={classes.userIcon} alt=\"\"/>\n                                <Typography variant=\"subtitle2\" gutterBottom>\n                                    <b>{user.fullName}</b>\n                                </Typography>\n                                <Typography variant=\"body1\" gutterBottom>\n                                    <b>Email: </b>{user.email}\n                                </Typography>\n                                <Typography variant=\"body1\" gutterBottom>\n                                    <b>Occupation: </b> {user.occupation}\n                                </Typography>\n                                <Typography variant=\"body1\" gutterBottom>\n                                    <b>Cellphone:</b> {user.phoneNumber}\n                                </Typography>\n                            </CardContent>\n                        </Card>\n                        <List>\n                            <ListItem\n                                button\n                                onClick={this.handleProfilePage}\n                            >\n                                <ListItemIcon>\n                                    <Person/>\n                                </ListItemIcon>\n                                <ListItemText primary=\"Profile\"/>\n                            </ListItem>\n                            <ListItem\n                                button\n                                onClick={this.handleChangeIsLoggedIn}\n                            >\n                                <ListItemIcon>\n                                    <img src={ExitIcon} alt=\"\"/>\n                                </ListItemIcon>\n                                <ListItemText primary=\"Logout\"/>\n                            </ListItem>\n                        </List>\n                    </div>\n                </Drawer>\n                <main\n                    className={classNames(classes.content, {\n                        [classes.contentShift]: open,\n                    })}\n                >\n                    <div className={classes.drawerHeader}/>\n                    {tasks}\n                </main>\n            </div>\n        );\n    }\n\n    handleDrawerOpen = () => {\n        this.setState({open: true});\n    };\n\n    handleDrawerClose = () => {\n        this.setState({open: false});\n    };\n\n    handleChangeIsLoggedIn() {\n        localStorage.setItem(\"isLoggedIn\", \"false\");\n        window.location.href = '/';\n    }\n\n    handleProfilePage() {\n        window.location.href = \"/profile\"\n    }\n\n    handleNewTask() {\n        window.location.href = \"/newtask\"\n    }\n}\n\nexport default withStyles(styles)(TaskPlannerDrawer);","import React, {Component} from 'react';\nimport TaskPlannerDrawer from './TaskPlannerDrawer';\n\n//const styles = theme => ({});\n\nclass TaskPlanner extends Component {\n\n    render() {\n\n        //const {classes} = this.props;\n\n        return (\n            <div>\n                <TaskPlannerDrawer/>\n            </div>\n        );\n    }\n}\n\nexport default TaskPlanner;","import React, {Component} from 'react';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ArrowBack from '@material-ui/icons/ArrowBack';\nimport AppBarPage from \"./AppBar\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Typography from \"@material-ui/core/Typography\"\nimport TextField from '@material-ui/core/TextField';\nimport Button from \"@material-ui/core/Button\";\n\nconst styles = theme => ({\n    backButton: {\n        marginLeft: -12,\n        marginRight: 20\n    },\n    text: {\n        width: \"30%\"\n    },\n    button: {\n        width: \"30%\"\n    }\n});\n\nclass UserProfile extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            fullname: '',\n            email: '',\n            phone: 0,\n            occupation: '',\n            password: ''\n        }\n\n        this.handleChangeFullName = this.handleChangeFullName.bind(this);\n        this.handleChangeEmail = this.handleChangeEmail.bind(this);\n        this.handleChangePhone = this.handleChangePhone.bind(this);\n        this.handleChangeOccupation = this.handleChangeOccupation.bind(this);\n        this.handleChangePassword = this.handleChangePassword.bind(this);\n        this.handleChangeProfile = this.handleChangeProfile.bind(this);\n    }\n\n    render() {\n\n        const {classes} = this.props;\n\n        const iconButton = (\n            <IconButton\n                className={classes.backButton}\n                onClick={this.handleBackPage}\n            >\n                <ArrowBack/>\n            </IconButton>\n        );\n\n        const fields = [\n            {\n                field: \"New full name\",\n                onchange: this.handleChangeFullName,\n                type: \"text\"\n            },\n            {\n                field: \"New email\",\n                onchange: this.handleChangeEmail,\n                type: \"text\"\n            },\n            {\n                field: \"New phone number\",\n                onchange: this.handleChangePhone,\n                type: \"number\"\n            },\n            {\n                field: \"New occupation\",\n                onchange: this.handleChangeOccupation,\n                type: \"text\"\n            },\n            {\n                field: \"New password\",\n                onchange: this.handleChangePassword,\n                type: \"password\"\n            }\n        ];\n\n        const textfields = fields.map((x, i) => {\n            return (\n                <>\n                    <TextField\n                        required\n                        key={i}\n                        label={x.field}\n                        onChange={x.onchange}\n                        margin=\"normal\"\n                        className={classes.text}\n                        variant=\"outlined\"\n                        type={x.type}\n                        defaultValue={x.default}\n                    />\n                    <br/>\n                </>\n            );\n        });\n\n        return (\n            <>\n                <AppBarPage button={iconButton}/>\n                <br/>\n                <br/>\n                <Typography variant=\"h2\" gutterBottom>\n                    Update your profile\n                </Typography>\n                <form className={classes.form} onSubmit={this.handleChangeProfile}>\n                    {textfields}\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.button}\n                        type=\"submit\"\n                    >\n                        Update profile\n                    </Button>\n                </form>\n\n            </>\n        );\n    };\n\n    handleBackPage() {\n        window.location.href = \"/tasks\"\n    }\n\n    handleChangeFullName(e) {\n        this.setState({fullname: e.target.value});\n    }\n\n    handleChangeEmail(e) {\n        this.setState({email: e.target.value});\n    }\n\n    handleChangePhone(e) {\n        this.setState({phone: e.target.value});\n    }\n\n    handleChangeOccupation(e) {\n        this.setState({occupation: e.target.value});\n    }\n\n    handleChangePassword(e) {\n        this.setState({password: e.target.value});\n    }\n\n    handleChangeProfile(e) {\n\n        e.preventDefault();\n\n        let users = JSON.parse(localStorage.getItem(\"users\"));\n\n        for (let x in users.list) {\n            if (localStorage.getItem(\"userLogged\") === users.list[x].username) {\n                users.list[x].fullname = this.state.fullname;\n                users.list[x].email = this.state.email;\n                users.list[x].phone = this.state.phone;\n                users.list[x].occupation = this.state.occupation;\n                users.list[x].password = this.state.password;\n            }\n        }\n\n        localStorage.setItem(\"users\", JSON.stringify(users));\n\n        alert(\"Profile updated\");\n\n        window.location.href = \"/tasks\"\n\n    }\n}\n\nexport default withStyles(styles)(UserProfile);","import React, {Component} from 'react';\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ArrowBack from '@material-ui/icons/ArrowBack';\nimport AppBarPage from \"./AppBar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from '@material-ui/core/TextField';\nimport Button from \"@material-ui/core/Button\";\n\nconst styles = theme => ({\n    backButton: {\n        marginLeft: -12,\n        marginRight: 20\n    },\n    text: {\n        width: \"30%\"\n    },\n    button: {\n        width: '30%'\n    }\n});\n\nclass RegisterPage extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            users: [],\n            fullname: '',\n            email: '',\n            username: '',\n            id: '',\n            phone: 0,\n            password: ''\n        }\n\n        this.handleChangeFullName = this.handleChangeFullName.bind(this);\n        this.handleChangeEmail = this.handleChangeEmail.bind(this);\n        this.handleChangeUsername = this.handleChangeUsername.bind(this);\n        this.handleChangeId = this.handleChangeId.bind(this);\n        this.handleChangePhone = this.handleChangePhone.bind(this);\n        this.handleChangePassword = this.handleChangePassword.bind(this);\n        this.handleChangeOccupation = this.handleChangeOccupation.bind(this);\n        this.handleSendRegister = this.handleSendRegister.bind(this);\n    }\n\n    render() {\n\n        const {classes} = this.props;\n\n        const iconButton = (\n            <IconButton\n                className={classes.backButton}\n                onClick={this.handleBackPage}\n            >\n                <ArrowBack/>\n            </IconButton>\n        );\n\n        const fields = [\n            {\n                field: \"Full name\",\n                onchange: this.handleChangeFullName,\n                type: \"text\"\n            }, {\n                field: \"Your email\",\n                onchange: this.handleChangeEmail,\n                type: \"text\"\n            }, {\n                field: \"Username\",\n                onchange: this.handleChangeUsername,\n                type: \"text\"\n            }, {\n                field: \"Identification\",\n                onchange: this.handleChangeId,\n                type: \"text\"\n            }, {\n                field: \"Phone number\",\n                onchange: this.handleChangePhone,\n                type: \"number\"\n            }, {\n                field: \"Occupation\",\n                onchange: this.handleChangeOccupation,\n                type: \"text\"\n            }, {\n                field: \"Password\",\n                onchange: this.handleChangePassword,\n                type: \"password\"\n            }\n        ];\n\n        const textfields = fields.map((x, i) => {\n            return (\n                <>\n                    <TextField\n                        required\n                        key={i}\n                        label={x.field}\n                        onChange={x.onchange}\n                        margin=\"normal\"\n                        className={classes.text}\n                        variant=\"outlined\"\n                        type={x.type}\n                        defaultValue={x.default}\n                    />\n                    <br/>\n                </>\n            );\n        });\n\n        return (\n            <>\n                <AppBarPage button={iconButton}/>\n\n                <br/>\n                <br/>\n\n                <Typography variant=\"h2\" gutterBottom>\n                    Create your tasks account, it's free!\n                </Typography>\n                <form className={classes.form} onSubmit={this.handleSendRegister}>\n                    {textfields}\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.button}\n                        type=\"submit\"\n                    >\n                        Send\n                    </Button>\n                </form>\n            </>\n        );\n    }\n\n    handleBackPage() {\n        window.location.href = \"/\"\n    }\n\n    handleChangeFullName(e) {\n        this.setState({fullname: e.target.value});\n    }\n\n    handleChangeEmail(e) {\n        this.setState({email: e.target.value});\n    }\n\n    handleChangeUsername(e) {\n        this.setState({username: e.target.value});\n    }\n\n    handleChangeId(e) {\n        this.setState({id: e.target.value});\n    }\n\n    handleChangePhone(e) {\n        this.setState({phone: e.target.value});\n    }\n\n    handleChangePassword(e) {\n        this.setState({password: e.target.value});\n    }\n\n    handleChangeOccupation(e) {\n        this.setState({occupation: e.target.value});\n    }\n\n    handleSendRegister(e) {\n\n        e.preventDefault();\n\n        const newUser = {\n            identification: this.state.id,\n            fullName: this.state.fullname,\n            email: this.state.email,\n            userName: this.state.username,\n            phoneNumber: this.state.phone,\n            occupation: this.state.occupation,\n            password: this.state.password\n        };\n\n        fetch(\"https://task-planner-api.herokuapp.com/user/new\",\n            {\n                method: \"POST\",\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json',\n                    \"Access-Control-Allow-Origin\": \"*\",\n                    \"Access-Control-Allow-Credentials\": true\n                },\n                body: JSON.stringify(newUser)\n            })\n            .then(function (res) {\n                return res.json();\n            })\n            .then(function (data) {\n                alert(JSON.stringify(data))\n            })\n\n        setTimeout(\n            function () {\n                window.location.href = \"/\";\n            }, 1000);\n\n    }\n}\n\nexport default withStyles(styles)(RegisterPage);","import React, {Component} from 'react';\nimport Login from './components/Login';\nimport './App.css';\nimport AppBarPage from './components/AppBar';\nimport TaskPlanner from \"./components/TaskPlanner\";\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\nimport NewTask from \"./components/NewTask\";\nimport UserProfile from \"./components/UserProfile\";\nimport RegisterPage from \"./components/RegisterPage\";\n\nclass App extends Component {\n\n    render() {\n\n        const loginView = () => (\n            <div>\n                <AppBarPage/>\n                <Login/>\n            </div>\n        );\n\n        const taskPlannerView = () => (\n            <div>\n                <TaskPlanner/>\n            </div>\n        );\n\n        const newTaskView = () => (\n            <NewTask/>\n        );\n\n        const userProfileView = () => (\n            <UserProfile/>\n        );\n\n        const registerPageView = () => (\n            <RegisterPage/>\n        );\n\n        const routesLogged = [\n            {\n                path: \"/tasks\",\n                component: taskPlannerView\n            }, {\n                path: \"/profile\",\n                component: userProfileView\n            }\n        ];\n\n        const routesNoLogged = [\n            {\n                path: \"/\",\n                component: loginView\n            }, {\n                path: \"/register\",\n                component: registerPageView\n            }\n        ];\n\n        const pathsLogged = routesLogged.map((x, i) => {\n            return (\n                <Route\n                    path={x.path}\n                    component={x.component}\n                    key={i}\n                />\n            );\n        });\n\n        const pathsNoLogged = routesNoLogged.map((x, i) => {\n            return (\n                <Route\n                    exact\n                    path={x.path}\n                    component={x.component}\n                    key={i}\n                />\n            );\n        });\n\n        const isLogged = localStorage.getItem('isLoggedIn');\n\n        return (\n            <Router>\n                <div className=\"App\">\n                    {isLogged === \"true\" ? pathsLogged : pathsNoLogged}\n                </div>\n            </Router>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('install', () => {\n            console.log(\"install!!\");\n        });\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit http://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport firebase from 'firebase';\n\nconst config = {\n    apiKey: \"AIzaSyAFPNr5dBlaiLb1QJqp1YOTNRIGzn0QLpQ\",\n    authDomain: \"task-planner-app-f396d.firebaseapp.com\",\n    databaseURL: \"https://task-planner-app-f396d.firebaseio.com\",\n    projectId: \"task-planner-app-f396d\",\n    storageBucket: \"task-planner-app-f396d.appspot.com\",\n    messagingSenderId: \"495126587051\"\n};\nfirebase.initializeApp(config);\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}