{"version":3,"sources":["images/user.png","images/baseline-exit_to_app-24px.svg","images/loginIcon.png","components/AppBar.js","components/SimpleModal.js","components/LoginForm.js","components/RegisterPage.js","components/Login.js","components/Task.js","components/Filter.js","components/NewTask.js","components/TaskPlannerDrawer.js","components/TaskPlanner.js","components/UserProfile.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","AppBarPage","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","classes","react_default","a","createElement","AppBar_default","position","Toolbar_default","button","Typography_default","variant","color","className","grow","Component","withStyles","root","flexGrow","textAlign","menuButton","marginLeft","marginRight","FormDialog","state","open","handleClickOpen","_this","setState","handleClose","Button_default","margin","onClick","size","modalButton","textButton","Dialog_default","fullWidth","onClose","aria-labelledby","dialog","DialogTitle_default","id","title","DialogContent_default","DialogContentText_default","dialogContent","form","React","theme","spacing","unit","LoginForm","userName","password","handleChangePassword","bind","assertThisInitialized","handleChangeUser","handleSubmit","e","target","value","self","preventDefault","axios","post","username","then","response","localStorage","setItem","data","accessToken","window","location","href","catch","error","console","log","alert","textFields","field","onChange","type","text","map","x","i","TextField_default","required","label","formButton","onSubmit","Fragment","SimpleModal","width","RegisterPage","firstName","lastName","email","handleChangeFirstName","handleChangeLastName","handleChangeEmail","handleChangeUsername","handleSendRegister","onchange","key","defaultValue","default","backButton","Login","components_AppBar","components_LoginForm","components_RegisterPage","Task","Card_default","card","CardContent_default","gutterBottom","tasks","responsible","description","dueDate","status","marginBottom","float","Filter","handleChangeResponsible","handleChangeDuedate","menuItems","MenuItem_default","drag","select","handleChangeStatus","SelectProps","MenuProps","menu","Tune_default","leftIcon","NewTask","duedate","user","handleChangeDescription","handleSendTask","get","getItem","Create_default","instance","create","baseURL","timeout","headers","Authorization","owner","TaskPlannerDrawer","handleDrawerOpen","handleDrawerClose","handleChangeIsLoggedIn","componentDidMount","updateTasks","_this2","_this3","components_Task","err","AppBar_AppBar","classNames","appBar","defineProperty","appBarShift","disableGutters","IconButton_default","aria-label","hide","Menu_default","noWrap","toolbarTitle","components_NewTask","components_Filter","Drawer_default","drawer","anchor","paper","drawerPaper","drawerHeader","ChevronLeft_default","Divider_default","userData","src","userIcon","alt","List_default","ListItem_default","handleProfilePage","ListItemIcon_default","Person_default","ListItemText_default","primary","ExitIcon","content","contentShift","minWidth","display","transition","transitions","easing","sharp","duration","leavingScreen","concat","easeOut","enteringScreen","flexShrink","objectSpread","alignItems","padding","mixins","toolbar","justifyContent","flex","TaskPlanner","components_TaskPlannerDrawer","UserProfile","fullname","phone","occupation","handleChangeFullName","handleChangePhone","handleChangeOccupation","handleChangeProfile","iconButton","handleBackPage","ArrowBack_default","textfields","users","JSON","parse","list","stringify","App","routesNoLogged","path","component","components_Login","pathsLogged","components_TaskPlanner","components_UserProfile","Route","pathsNoLogged","exact","isLogged","BrowserRouter","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","fetch","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.5310ca4b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/user.04d79fe9.png\";","module.exports = __webpack_public_path__ + \"static/media/baseline-exit_to_app-24px.63002100.svg\";","module.exports = __webpack_public_path__ + \"static/media/loginIcon.e56b8419.png\";","import React, {Component} from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Button from \"@material-ui/core/Button\";\n\nconst styles = {\n    root: {\n        flexGrow: 1,\n    },\n    grow: {\n        flexGrow: 1,\n        textAlign: \"left\"\n    },\n    menuButton: {\n        marginLeft: -12,\n        marginRight: 20,\n    },\n}\n\nclass AppBarPage extends Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n\n        const {classes} = this.props;\n\n        return (\n            <div>\n                <AppBar position=\"static\">\n                    <Toolbar>\n                        {this.props.button}\n                        <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\n                            Task Planner\n                        </Typography>\n                    </Toolbar>\n                </AppBar>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(AppBarPage);","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport withStyles from \"@material-ui/core/styles/withStyles\";\n\nconst styles = theme => ({\n    dialog: {\n        textAlign: \"center\"\n    }, margin: {\n        margin: theme.spacing.unit,\n    }\n});\n\nclass FormDialog extends React.Component {\n    state = {\n        open: false,\n    };\n\n    handleClickOpen = () => {\n        this.setState({open: true});\n    };\n\n    handleClose = () => {\n        this.setState({open: false});\n    };\n\n    render() {\n\n        const {classes} = this.props;\n\n        return (\n            <div>\n                <Button\n                    color={this.props.color}\n                    className={classes.margin}\n                    onClick={this.handleClickOpen}\n                    variant={this.props.variant}\n                    size={this.props.size}\n                >\n                    {this.props.modalButton}\n                    {this.props.textButton}\n                </Button>\n                <Dialog\n                    fullWidth={true}\n                    open={this.state.open}\n                    onClose={this.handleClose}\n                    aria-labelledby=\"form-dialog-title\"\n                    className={classes.dialog}\n                >\n                    <DialogTitle id=\"form-dialog-title\">\n                        {this.props.title}\n                    </DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {this.props.dialogContent}\n                        </DialogContentText>\n                        {this.props.form}\n                    </DialogContent>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(FormDialog);","import React, {Component} from 'react';\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport TextField from '@material-ui/core/TextField';\nimport Button from \"@material-ui/core/Button\";\nimport SimpleModal from \"./SimpleModal\";\nimport axios from \"axios\";\n\nconst styles = {\n    button: {\n        width: '70%'\n    },\n    text: {\n        width: '90%'\n    }\n}\n\nclass LoginForm extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            userName: \"\",\n            password: \"\"\n        }\n\n        this.handleChangePassword = this.handleChangePassword.bind(this);\n        this.handleChangeUser = this.handleChangeUser.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n\n    }\n\n    handleChangeUser(e) {\n        this.setState({userName: e.target.value})\n    }\n\n    handleChangePassword(e) {\n        this.setState({password: e.target.value})\n    }\n\n    handleSubmit(e) {\n\n        var self = this;\n\n        e.preventDefault();\n\n        axios.post('http://localhost:8080/token/login', {\n            username: this.state.userName,\n            password: this.state.password\n        })\n            .then(function (response) {\n                localStorage.setItem(\"token\", response.data.accessToken);\n                localStorage.setItem(\"isLoggedIn\", true);\n                localStorage.setItem(\"userLogged\", self.state.userName);\n                window.location.href = \"/tasks\";\n            })\n            .catch(function (error) {\n                console.log(error)\n                alert(\"User or password incorrect\");\n            });\n    }\n\n    render() {\n\n        const {classes} = this.props;\n\n        const fields = [\n            {\n                field: \"Username\",\n                onChange: this.handleChangeUser,\n                type: \"text\",\n                id: \"user\",\n                className: classes.text\n            }, {\n                field: \"Password\",\n                onChange: this.handleChangePassword,\n                type: \"password\",\n                id: \"password\",\n                className: classes.text\n            }\n        ]\n\n        const textFields = fields.map((x, i) => {\n            return (\n                <TextField\n                    required\n                    id={x.id}\n                    label={x.field}\n                    margin=\"normal\"\n                    className={x.className}\n                    variant=\"outlined\"\n                    onChange={x.onChange}\n                    type={x.type}\n                />\n            );\n        });\n\n        const formButton = (\n            <Button\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.button}\n                type=\"submit\"\n            >\n                Sign In\n            </Button>\n        );\n\n        const form = (\n            <form\n                id=\"loginForm\"\n                className={classes.form}\n                onSubmit={this.handleSubmit}\n            >\n                {textFields}\n                {formButton}\n            </form>\n        );\n\n        return (\n            <>\n                <SimpleModal\n                    title=\"Sign In\"\n                    dialogContent=\"Login to your tasks account\"\n                    form={form}\n                    textButton=\"Sign In\"\n                    variant=\"contained\"\n                    size=\"large\"\n                    color=\"primary\"\n                />\n            </>\n        );\n    }\n}\n\nexport default withStyles(styles)(LoginForm);","import React, {Component} from 'react';\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ArrowBack from '@material-ui/icons/ArrowBack';\nimport TextField from '@material-ui/core/TextField';\nimport Button from \"@material-ui/core/Button\";\nimport SimpleModal from \"./SimpleModal\";\nimport axios from 'axios';\n\nconst styles = theme => ({\n    backButton: {\n        marginLeft: -12,\n        marginRight: 20\n    },\n    text: {\n        width: \"90%\"\n    },\n    button: {\n        width: '70%'\n    }\n});\n\nclass RegisterPage extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            firstName: '',\n            lastName: '',\n            email: '',\n            userName: '',\n            password: ''\n        }\n\n        this.handleChangeFirstName = this.handleChangeFirstName.bind(this);\n        this.handleChangeLastName = this.handleChangeLastName.bind(this);\n        this.handleChangeEmail = this.handleChangeEmail.bind(this);\n        this.handleChangeUsername = this.handleChangeUsername.bind(this);\n        this.handleChangePassword = this.handleChangePassword.bind(this);\n        this.handleSendRegister = this.handleSendRegister.bind(this);\n    }\n\n    render() {\n\n        const {classes} = this.props;\n\n        const fields = [\n            {\n                field: \"First name\",\n                onchange: this.handleChangeFirstName,\n                type: \"text\"\n            }, {\n                field: \"Last name\",\n                onchange: this.handleChangeLastName,\n                type: \"text\"\n            }, {\n                field: \"Your email\",\n                onchange: this.handleChangeEmail,\n                type: \"text\"\n            }, {\n                field: \"Username\",\n                onchange: this.handleChangeUsername,\n                type: \"text\"\n            }, {\n                field: \"Password\",\n                onchange: this.handleChangePassword,\n                type: \"password\"\n            }\n        ];\n\n        const textFields = fields.map((x, i) => {\n            return (\n                <>\n                    <TextField\n                        required\n                        key={i}\n                        label={x.field}\n                        onChange={x.onchange}\n                        margin=\"normal\"\n                        className={classes.text}\n                        variant=\"outlined\"\n                        type={x.type}\n                        defaultValue={x.default}\n                    />\n                    <br/>\n                </>\n            );\n        });\n\n        const formButton = (\n            <Button\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.button}\n                type=\"submit\"\n            >\n                Send\n            </Button>\n        );\n\n        const form = (\n            <form className={classes.form} onSubmit={this.handleSendRegister}>\n                {textFields}\n                {formButton}\n            </form>\n        );\n\n        return (\n            <>\n                <SimpleModal\n                    title=\"Register\"\n                    dialogContent=\"Create your tasks account, it's free!\"\n                    form={form}\n                    textButton=\"Sign Up\"\n                    variant=\"contained\"\n                    size=\"large\"\n                    color=\"primary\"\n                />\n            </>\n        );\n    }\n\n    handleBackPage() {\n        window.location.href = \"/\"\n    }\n\n    handleChangeFirstName(e) {\n        this.setState({firstName: e.target.value});\n    }\n\n    handleChangeLastName(e) {\n        this.setState({lastName: e.target.value});\n    }\n\n    handleChangeEmail(e) {\n        this.setState({email: e.target.value});\n    }\n\n    handleChangeUsername(e) {\n        this.setState({userName: e.target.value});\n    }\n\n    handleChangePassword(e) {\n        this.setState({password: e.target.value});\n    }\n\n    handleSendRegister(e) {\n\n        e.preventDefault();\n\n        axios.post('http://localhost:8080/user/new', {\n            username: this.state.userName,\n            email: this.state.email,\n            password: this.state.password,\n            firstName: this.state.firstName,\n            lastName: this.state.lastName\n        })\n            .then((response) => {\n                alert(\"User created\");\n                window.location.href = \"/\"\n            })\n            .catch((error) => {\n                console.log(error);\n                alert(\"Error creating the user\")\n            })\n\n    }\n}\n\nexport default withStyles(styles)(RegisterPage);","import React, {Component} from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport loginIcon from '../images/loginIcon.png';\nimport AppBarPage from \"./AppBar\";\nimport LoginForm from \"./LoginForm\";\nimport RegisterPage from \"./RegisterPage\";\n\nconst styles = theme => ({});\n\nclass Login extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {}\n    }\n\n    render() {\n\n        const {classes} = this.props;\n\n        return (\n            <>\n                <AppBarPage/>\n                <LoginForm/>\n                <RegisterPage/>\n            </>\n        );\n    }\n}\n\nexport default withStyles(styles)(Login);","import React, {Component} from 'react';\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\n\nconst styles = theme => ({\n    card: {\n        width: \"100%\",\n        marginBottom: \"1%\",\n        float: \"left\"\n    }\n});\n\nclass Task extends Component {\n\n    render() {\n\n        const {classes} = this.props;\n\n        return (\n            <Card className={classes.card}>\n                <CardContent>\n                    <Typography variant=\"h5\" gutterBottom>\n                        <b>Responsible:</b> {this.props.tasks.responsible}\n                    </Typography>\n                    <Typography variant=\"subtitle1\" gutterBottom>\n                        <b>Description:</b> {this.props.tasks.description}\n                    </Typography>\n                    <Typography variant=\"subtitle1\" gutterBottom>\n                        <b>Date:</b> {this.props.tasks.dueDate}\n                    </Typography>\n                    <Typography variant=\"subtitle1\" gutterBottom>\n                        <b>Status:</b> {this.props.tasks.status}\n                    </Typography>\n                </CardContent>\n            </Card>\n        );\n    }\n}\n\nexport default withStyles(styles)(Task);","import React, {Component} from 'react';\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Button from \"@material-ui/core/Button\";\nimport Tune from '@material-ui/icons/Tune';\nimport SimpleModal from \"./SimpleModal\";\n\nconst styles = theme => ({\n    text: {\n        width: \"90%\"\n    }, button: {\n        width: \"70%\"\n    }, leftIcon: {\n        marginRight: theme.spacing.unit,\n    }\n})\n\nclass Filter extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {}\n    }\n\n    render() {\n\n        const {classes} = this.props;\n\n        const fields = [\n            {\n                field: \"Responsible\",\n                onchange: this.handleChangeResponsible,\n                type: \"text\"\n            }, {\n                field: \"Duedate\",\n                onchange: this.handleChangeDuedate,\n                type: \"date\",\n                default: \"2019-01-01\"\n            }];\n\n        const textFields = fields.map((x, i) => {\n            return (\n                <>\n                    <TextField\n                        required\n                        key={i}\n                        label={x.field}\n                        onChange={x.onchange}\n                        margin=\"normal\"\n                        className={classes.text}\n                        variant=\"outlined\"\n                        type={x.type}\n                        defaultValue={x.default}\n                    />\n                    <br/>\n                </>\n            );\n        });\n\n        const options = [\"In progress\", \"Ready\", \"Completed\"]\n\n        const menuItems = options.map((x) => {\n            return (\n                <MenuItem value={x}>\n                    {x}\n                </MenuItem>\n            );\n        });\n\n        const drag = (\n            <TextField\n                select\n                required\n                margin=\"normal\"\n                label=\"Status\"\n                className={classes.text}\n                value={this.state.status}\n                onChange={this.handleChangeStatus}\n                SelectProps={{\n                    MenuProps: {\n                        className: classes.menu,\n                    },\n                }}\n                variant=\"outlined\"\n            >\n                {menuItems}\n            </TextField>\n        );\n\n        const button = (\n            <Button\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.button}\n                type=\"submit\"\n            >\n                Filter\n            </Button>\n        )\n\n        const form = (\n            <form>\n                {textFields}\n                {drag}\n                {button}\n            </form>\n        );\n\n        const modalButton = (\n            <Tune className={classes.leftIcon}/>\n        );\n\n        return (\n            <>\n                <SimpleModal\n                    title=\"Filter\"\n                    form={form}\n                    dialogContent=\"Here you can filter your tasks to show them by Date, Responsible or Status\"\n                    modalButton={modalButton}\n                    color=\"inherit\"\n                />\n            </>\n        );\n    }\n\n}\n\nexport default withStyles(styles)(Filter);","import React, {Component} from 'react';\nimport ArrowBack from '@material-ui/icons/ArrowBack';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport TextField from '@material-ui/core/TextField';\nimport Button from \"@material-ui/core/Button\";\nimport 'typeface-roboto';\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Create from '@material-ui/icons/Create';\nimport SimpleModal from \"./SimpleModal\";\nimport axios from 'axios';\n\nconst styles = theme => ({\n    text: {\n        width: '90%',\n        textAlign: \"left\",\n    },\n    button: {\n        width: '70%'\n    }, leftIcon: {\n        marginRight: theme.spacing.unit,\n    }\n});\n\nclass NewTask extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            description: '',\n            responsible: '',\n            status: '',\n            duedate: '',\n            user: '',\n            tasks: []\n        };\n\n        this.handleChangeDuedate = this.handleChangeDuedate.bind(this);\n        this.handleChangeResponsible = this.handleChangeResponsible.bind(this);\n        this.handleChangeDescription = this.handleChangeDescription.bind(this);\n        this.handleChangeStatus = this.handleChangeStatus.bind(this);\n        this.handleSendTask = this.handleSendTask.bind(this);\n    }\n\n    componentDidMount() {\n\n        let self = this;\n\n        axios.get('http://localhost:8080/user/username/' + localStorage.getItem(\"userLogged\"))\n            .then(function (response) {\n                self.setState({user: response.data})\n            })\n            .catch(function (error) {\n                console.log(error)\n            })\n    }\n\n    render() {\n\n        const {classes} = this.props;\n\n        const fields = [\n            {\n                field: \"Description\",\n                onchange: this.handleChangeDescription,\n                type: \"text\"\n\n            }, {\n                field: \"Responsible\",\n                onchange: this.handleChangeResponsible,\n                type: \"text\"\n            }, {\n                field: \"Duedate\",\n                onchange: this.handleChangeDuedate,\n                type: \"date\",\n                default: \"2019-01-01\"\n            }];\n\n        const textFields = fields.map((x, i) => {\n            return (\n                <>\n                    <TextField\n                        required\n                        key={i}\n                        label={x.field}\n                        onChange={x.onchange}\n                        margin=\"normal\"\n                        className={classes.text}\n                        variant=\"outlined\"\n                        type={x.type}\n                        defaultValue={x.default}\n                    />\n                    <br/>\n                </>\n            );\n        });\n\n        const options = [\"In progress\", \"Ready\", \"Completed\"]\n\n        const menuItems = options.map((x) => {\n            return (\n                <MenuItem value={x}>\n                    {x}\n                </MenuItem>\n            );\n        });\n\n        const drag = (\n            <TextField\n                select\n                required\n                margin=\"normal\"\n                label=\"Status\"\n                className={classes.text}\n                value={this.state.status}\n                onChange={this.handleChangeStatus}\n                SelectProps={{\n                    MenuProps: {\n                        className: classes.menu,\n                    },\n                }}\n                variant=\"outlined\"\n            >\n                {menuItems}\n            </TextField>\n        );\n\n        const button = (\n            <Button\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.button}\n                type=\"submit\"\n            >\n                Send\n            </Button>\n        );\n\n        const form = (\n            <form className={classes.form} onSubmit={this.handleSendTask}>\n                {textFields}\n                {drag}\n                {button}\n            </form>\n        );\n\n        const modalButton = (\n            <Create className={classes.leftIcon}/>\n        );\n\n        return (\n            <>\n                <SimpleModal\n                    title=\"New task\"\n                    dialogContent=\"Create your new task\"\n                    form={form}\n                    modalButton={modalButton}\n                    color=\"inherit\"\n                />\n            </>\n        );\n    }\n\n    handleBackPage() {\n        window.location.href = '/tasks';\n    }\n\n    handleChangeDescription(e) {\n        this.setState({description: e.target.value});\n    }\n\n    handleChangeResponsible(e) {\n        this.setState({responsible: e.target.value});\n    }\n\n    handleChangeStatus(e) {\n        this.setState({status: e.target.value});\n    }\n\n    handleChangeDuedate(e) {\n        this.setState({duedate: e.target.value});\n    }\n\n    handleSendTask(e) {\n\n        e.preventDefault();\n\n        const instance = axios.create({\n            baseURL: 'http://localhost:8080/api/',\n            timeout: 1000,\n            headers: {'Authorization': 'Bearer ' + localStorage.getItem(\"token\")}\n        });\n\n        instance.post(\"http://localhost:8080/api/task/newtask\", {\n            owner: this.state.user.id,\n            description: this.state.description,\n            responsible: this.state.responsible,\n            status: this.state.status,\n            dueDate: this.state.duedate\n        })\n            .then(function (response) {\n                console.log(response)\n                window.location.href = \"/tasks\"\n            })\n            .catch(function (error) {\n                console.log(\"Error creating a new task\", error)\n            })\n\n        instance.get('http://localhost:8080/api/task/all')\n            .then((response) => {\n                console.log(response.data)\n            })\n    }\n}\n\nexport default withStyles(styles)(NewTask);","import React, {Component} from 'react';\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport AppBar from \"@material-ui/core/es/AppBar\";\nimport classNames from 'classnames';\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Card from \"@material-ui/core/Card\";\nimport userIcon from \"../images/user.png\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ExitIcon from \"../images/baseline-exit_to_app-24px.svg\";\nimport Task from \"./Task\";\nimport Person from '@material-ui/icons/Person';\nimport ModalFilter from \"./Filter\";\nimport ModalNewTask from \"./NewTask\"\nimport axios from \"axios\";\n\n\nconst drawerWidth = 350;\n\nconst styles = theme => ({\n    card: {\n        minWidth: 275,\n    },\n    root: {\n        display: 'flex',\n    },\n    appBar: {\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarShift: {\n        width: `calc(100% - ${drawerWidth}px)`,\n        marginLeft: drawerWidth,\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButton: {\n        marginLeft: 12,\n        marginRight: 20,\n    },\n    hide: {\n        display: 'none',\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n    },\n    drawerPaper: {\n        width: drawerWidth,\n    },\n    drawerHeader: {\n        display: 'flex',\n        alignItems: 'center',\n        padding: '0 8px',\n        ...theme.mixins.toolbar,\n        justifyContent: 'flex-end',\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing.unit * 3,\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        marginLeft: -drawerWidth,\n    },\n    contentShift: {\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n        marginLeft: 0,\n    },\n    userIcon: {\n        width: '30%'\n    },\n    grow: {\n        flexGrow: 1,\n    },\n    button: {\n        marginRight: 20\n    }, leftIcon: {\n        marginRight: theme.spacing.unit,\n    },\n    toolbarTitle: {\n        flex: 1,\n        textAlign: \"left\"\n    }\n});\n\nclass TaskPlannerDrawer extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            open: false,\n            tasks: [],\n            user: {}\n        };\n\n        this.handleChangeIsLoggedIn = this.handleChangeIsLoggedIn.bind(this);\n        this.componentDidMount = this.componentDidMount.bind(this);\n        this.updateTasks = this.updateTasks.bind(this);\n    };\n\n    componentDidMount() {\n        axios.get('http://localhost:8080/user/username/' + localStorage.getItem(\"userLogged\"))\n            .then((response) => {\n                this.setState({user: response.data})\n                this.updateTasks();\n        });\n    }\n\n    updateTasks() {\n\n        const instance = axios.create({\n            baseURL: 'http://localhost:8080/api/',\n            timeout: 1000,\n            headers: {'Authorization': 'Bearer ' + localStorage.getItem(\"token\")}\n        });\n\n        instance.get('http://localhost:8080/api/task/user/' + this.state.user.id)\n            .then((response) => {\n                this.setState({tasks: response.data})\n            });\n    }\n\n    render() {\n\n        let user = this.state.user;\n\n        const {classes} = this.props;\n\n        const {open} = this.state;\n\n        let tasks;\n\n        try {\n            tasks = this.state.tasks.map((x, i) => {\n                return (\n                    <Task\n                        key={i}\n                        tasks={x}\n                    />\n                );\n            });\n        } catch (err) {\n            tasks = []\n        }\n\n        return (\n            <div className={classes.root}>\n                <AppBar\n                    position=\"fixed\"\n                    className={classNames(classes.appBar, {\n                        [classes.appBarShift]: open,\n                    })}\n                >\n                    <Toolbar disableGutters={!open}>\n                        <IconButton\n                            color=\"inherit\"\n                            aria-label=\"Open drawer\"\n                            onClick={this.handleDrawerOpen}\n                            className={classNames(classes.menuButton, open && classes.hide)}\n                        >\n                            <MenuIcon/>\n                        </IconButton>\n                        <Typography variant=\"h6\" color=\"inherit\" noWrap className={classes.toolbarTitle}>\n                            Task planner\n                        </Typography>\n                        <ModalNewTask/>\n                        <ModalFilter/>\n                    </Toolbar>\n                </AppBar>\n                <Drawer\n                    className={classes.drawer}\n                    variant=\"persistent\"\n                    anchor=\"left\"\n                    open={open}\n                    classes={{\n                        paper: classes.drawerPaper,\n                    }}\n                >\n                    <div className={classes.drawerHeader}>\n                        <IconButton onClick={this.handleDrawerClose}>\n                            <ChevronLeftIcon/>\n                        </IconButton>\n                    </div>\n                    <Divider/>\n                    <div className={classes.userData}>\n                        <Card className={classes.card}>\n                            <CardContent>\n                                <img src={userIcon} className={classes.userIcon} alt=\"\"/>\n                                <Typography variant=\"subtitle2\" gutterBottom>\n                                    <b>{user.firstName + \" \" + user.lastName}</b>\n                                </Typography>\n                                <Typography variant=\"body1\" gutterBottom>\n                                    <b>Email: </b>{user.email}\n                                </Typography>\n                            </CardContent>\n                        </Card>\n                        <List>\n                            <ListItem\n                                button\n                                onClick={this.handleProfilePage}\n                            >\n                                <ListItemIcon>\n                                    <Person/>\n                                </ListItemIcon>\n                                <ListItemText primary=\"Profile\"/>\n                            </ListItem>\n                            <ListItem\n                                button\n                                onClick={this.handleChangeIsLoggedIn}\n                            >\n                                <ListItemIcon>\n                                    <img src={ExitIcon} alt=\"\"/>\n                                </ListItemIcon>\n                                <ListItemText primary=\"Logout\"/>\n                            </ListItem>\n                        </List>\n                    </div>\n                </Drawer>\n                <main\n                    className={classNames(classes.content, {\n                        [classes.contentShift]: open,\n                    })}\n                >\n                    <div className={classes.drawerHeader}/>\n                    {tasks}\n                </main>\n            </div>\n        );\n    }\n\n    handleDrawerOpen = () => {\n        this.setState({open: true});\n    };\n\n    handleDrawerClose = () => {\n        this.setState({open: false});\n    };\n\n    handleChangeIsLoggedIn() {\n        localStorage.setItem(\"isLoggedIn\", \"false\");\n        window.location.href = '/';\n    }\n\n    handleProfilePage() {\n        window.location.href = \"/profile\"\n    }\n\n    handleNewTask() {\n        window.location.href = \"/newtask\"\n    }\n}\n\nexport default withStyles(styles)(TaskPlannerDrawer);","import React, {Component} from 'react';\nimport TaskPlannerDrawer from './TaskPlannerDrawer';\n\n//const styles = theme => ({});\n\nclass TaskPlanner extends Component {\n\n    render() {\n\n        //const {classes} = this.props;\n\n        return (\n            <div>\n                <TaskPlannerDrawer/>\n            </div>\n        );\n    }\n}\n\nexport default TaskPlanner;","import React, {Component} from 'react';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ArrowBack from '@material-ui/icons/ArrowBack';\nimport AppBarPage from \"./AppBar\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Typography from \"@material-ui/core/Typography\"\nimport TextField from '@material-ui/core/TextField';\nimport Button from \"@material-ui/core/Button\";\n\nconst styles = theme => ({\n    backButton: {\n        marginLeft: -12,\n        marginRight: 20\n    },\n    text: {\n        width: \"30%\"\n    },\n    button: {\n        width: \"30%\"\n    }\n});\n\nclass UserProfile extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            fullname: '',\n            email: '',\n            phone: 0,\n            occupation: '',\n            password: ''\n        }\n\n        this.handleChangeFullName = this.handleChangeFullName.bind(this);\n        this.handleChangeEmail = this.handleChangeEmail.bind(this);\n        this.handleChangePhone = this.handleChangePhone.bind(this);\n        this.handleChangeOccupation = this.handleChangeOccupation.bind(this);\n        this.handleChangePassword = this.handleChangePassword.bind(this);\n        this.handleChangeProfile = this.handleChangeProfile.bind(this);\n    }\n\n    render() {\n\n        const {classes} = this.props;\n\n        const iconButton = (\n            <IconButton\n                className={classes.backButton}\n                onClick={this.handleBackPage}\n            >\n                <ArrowBack/>\n            </IconButton>\n        );\n\n        const fields = [\n            {\n                field: \"New full name\",\n                onchange: this.handleChangeFullName,\n                type: \"text\"\n            },\n            {\n                field: \"New email\",\n                onchange: this.handleChangeEmail,\n                type: \"text\"\n            },\n            {\n                field: \"New phone number\",\n                onchange: this.handleChangePhone,\n                type: \"number\"\n            },\n            {\n                field: \"New occupation\",\n                onchange: this.handleChangeOccupation,\n                type: \"text\"\n            },\n            {\n                field: \"New password\",\n                onchange: this.handleChangePassword,\n                type: \"password\"\n            }\n        ];\n\n        const textfields = fields.map((x, i) => {\n            return (\n                <>\n                    <TextField\n                        required\n                        key={i}\n                        label={x.field}\n                        onChange={x.onchange}\n                        margin=\"normal\"\n                        className={classes.text}\n                        variant=\"outlined\"\n                        type={x.type}\n                        defaultValue={x.default}\n                    />\n                    <br/>\n                </>\n            );\n        });\n\n        return (\n            <>\n                <AppBarPage button={iconButton}/>\n                <br/>\n                <br/>\n                <Typography variant=\"h2\" gutterBottom>\n                    Update your profile\n                </Typography>\n                <form className={classes.form} onSubmit={this.handleChangeProfile}>\n                    {textfields}\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.button}\n                        type=\"submit\"\n                    >\n                        Update profile\n                    </Button>\n                </form>\n\n            </>\n        );\n    };\n\n    handleBackPage() {\n        window.location.href = \"/tasks\"\n    }\n\n    handleChangeFullName(e) {\n        this.setState({fullname: e.target.value});\n    }\n\n    handleChangeEmail(e) {\n        this.setState({email: e.target.value});\n    }\n\n    handleChangePhone(e) {\n        this.setState({phone: e.target.value});\n    }\n\n    handleChangeOccupation(e) {\n        this.setState({occupation: e.target.value});\n    }\n\n    handleChangePassword(e) {\n        this.setState({password: e.target.value});\n    }\n\n    handleChangeProfile(e) {\n\n        e.preventDefault();\n\n        let users = JSON.parse(localStorage.getItem(\"users\"));\n\n        for (let x in users.list) {\n            if (localStorage.getItem(\"userLogged\") === users.list[x].username) {\n                users.list[x].fullname = this.state.fullname;\n                users.list[x].email = this.state.email;\n                users.list[x].phone = this.state.phone;\n                users.list[x].occupation = this.state.occupation;\n                users.list[x].password = this.state.password;\n            }\n        }\n\n        localStorage.setItem(\"users\", JSON.stringify(users));\n\n        alert(\"Profile updated\");\n\n        window.location.href = \"/tasks\"\n\n    }\n}\n\nexport default withStyles(styles)(UserProfile);","import React, {Component} from 'react';\nimport Login from './components/Login';\nimport './App.css';\nimport TaskPlanner from \"./components/TaskPlanner\";\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\nimport NewTask from \"./components/NewTask\";\nimport UserProfile from \"./components/UserProfile\";\nimport RegisterPage from \"./components/RegisterPage\";\n\nclass App extends Component {\n\n    render() {\n\n        const loginView = () => (\n            <div>\n                <Login/>\n            </div>\n        );\n\n        const taskPlannerView = () => (\n            <div>\n                <TaskPlanner/>\n            </div>\n        );\n\n        const newTaskView = () => (\n            <NewTask/>\n        );\n\n        const userProfileView = () => (\n            <UserProfile/>\n        );\n\n        const registerPageView = () => (\n            <RegisterPage/>\n        );\n\n        const routesLogged = [\n            {\n                path: \"/tasks\",\n                component: taskPlannerView\n            }, {\n                path: \"/profile\",\n                component: userProfileView\n            }\n        ];\n\n        const routesNoLogged = [\n            {\n                path: \"/\",\n                component: loginView\n            }\n        ];\n\n        const pathsLogged = routesLogged.map((x, i) => {\n            return (\n                <Route\n                    path={x.path}\n                    component={x.component}\n                    key={i}\n                />\n            );\n        });\n\n        const pathsNoLogged = routesNoLogged.map((x, i) => {\n            return (\n                <Route\n                    exact\n                    path={x.path}\n                    component={x.component}\n                    key={i}\n                />\n            );\n        });\n\n        const isLogged = localStorage.getItem('isLoggedIn');\n\n        return (\n            <Router>\n                <div className=\"App\">\n                    {isLogged === \"true\" ? pathsLogged : pathsNoLogged}\n                </div>\n            </Router>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('install', () => {\n            console.log(\"install!!\");\n        });\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit http://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport firebase from 'firebase';\n\nconst config = {\n    apiKey: \"AIzaSyAFPNr5dBlaiLb1QJqp1YOTNRIGzn0QLpQ\",\n    authDomain: \"task-planner-app-f396d.firebaseapp.com\",\n    databaseURL: \"https://task-planner-app-f396d.firebaseio.com\",\n    projectId: \"task-planner-app-f396d\",\n    storageBucket: \"task-planner-app-f396d.appspot.com\",\n    messagingSenderId: \"495126587051\"\n};\nfirebase.initializeApp(config);\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}