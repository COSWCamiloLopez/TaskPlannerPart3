{"ast":null,"code":"import _classCallCheck from \"/home/camilo/Documents/Universidad/IETI/IETI_Labs/TaskPlannerPart2/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/camilo/Documents/Universidad/IETI/IETI_Labs/TaskPlannerPart2/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/camilo/Documents/Universidad/IETI/IETI_Labs/TaskPlannerPart2/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/camilo/Documents/Universidad/IETI/IETI_Labs/TaskPlannerPart2/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/camilo/Documents/Universidad/IETI/IETI_Labs/TaskPlannerPart2/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/camilo/Documents/Universidad/IETI/IETI_Labs/TaskPlannerPart2/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/camilo/Documents/Universidad/IETI/IETI_Labs/TaskPlannerPart2/src/components/UserProfile.js\";\nimport React, { Component } from 'react';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ArrowBack from '@material-ui/icons/ArrowBack';\nimport AppBarPage from \"./AppBar\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from '@material-ui/core/TextField';\nimport Button from \"@material-ui/core/Button\";\n\nvar styles = function styles(theme) {\n  return {\n    backButton: {\n      marginLeft: -12,\n      marginRight: 20\n    },\n    text: {\n      width: \"30%\"\n    },\n    button: {\n      width: \"30%\"\n    }\n  };\n};\n\nvar UserProfile =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(UserProfile, _Component);\n\n  function UserProfile(props) {\n    var _this;\n\n    _classCallCheck(this, UserProfile);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(UserProfile).call(this, props));\n    _this.state = {\n      fullname: '',\n      email: '',\n      phone: 0,\n      occupation: '',\n      password: ''\n    };\n    _this.handleChangeFullname = _this.handleChangeFullname.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleChangeEmail = _this.handleChangeEmail.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleChangePhone = _this.handleChangePhone.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleChangeOccupation = _this.handleChangeOccupation.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleChangePassword = _this.handleChangePassword.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleChangeProfile = _this.handleChangeProfile.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(UserProfile, [{\n    key: \"render\",\n    value: function render() {\n      var classes = this.props.classes;\n      var iconButton = React.createElement(IconButton, {\n        className: classes.backButton,\n        onClick: this.handleBackPage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(ArrowBack, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }));\n      var fields = [{\n        field: \"New full name\",\n        onchange: this.handleChangeFullName,\n        type: \"text\"\n      }, {\n        field: \"New email\",\n        onchange: this.handleChangeEmail,\n        type: \"text\"\n      }, {\n        field: \"New phone number\",\n        onchange: this.handleChangePhone,\n        type: \"number\"\n      }, {\n        field: \"New occupation\",\n        onchange: this.handleChangeOccupation,\n        type: \"text\"\n      }, {\n        field: \"New password\",\n        onchange: this.handleChangePassword,\n        type: \"password\"\n      }];\n      var textfields = fields.map(function (x) {\n        return React.createElement(React.Fragment, null, React.createElement(TextField, {\n          required: true,\n          label: x.field,\n          onChange: x.onchange,\n          margin: \"normal\",\n          className: classes.text,\n          variant: \"outlined\",\n          type: x.type,\n          defaultValue: x.default,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }));\n      });\n      return React.createElement(React.Fragment, null, React.createElement(AppBarPage, {\n        button: iconButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }), React.createElement(Typography, {\n        variant: \"h2\",\n        gutterBottom: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"Update your profile\"), React.createElement(\"form\", {\n        className: classes.form,\n        onSubmit: this.handleChangeProfile,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, textfields, React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        className: classes.button,\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"Update profile\")));\n    }\n  }, {\n    key: \"handleBackPage\",\n    value: function handleBackPage() {\n      window.location.href = \"/tasks\";\n    }\n  }, {\n    key: \"handleChangeFullname\",\n    value: function handleChangeFullname(e) {\n      this.setState({\n        fullname: e.target.value\n      });\n    }\n  }, {\n    key: \"handleChangeEmail\",\n    value: function handleChangeEmail(e) {\n      this.setState({\n        email: e.target.value\n      });\n    }\n  }, {\n    key: \"handleChangePhone\",\n    value: function handleChangePhone(e) {\n      this.setState({\n        phone: e.target.value\n      });\n    }\n  }, {\n    key: \"handleChangeOccupation\",\n    value: function handleChangeOccupation(e) {\n      this.setState({\n        occupation: e.target.value\n      });\n    }\n  }, {\n    key: \"handleChangePassword\",\n    value: function handleChangePassword(e) {\n      this.setState({\n        password: e.target.value\n      });\n    }\n  }, {\n    key: \"handleChangeProfile\",\n    value: function handleChangeProfile(e) {\n      e.preventDefault();\n      var users = JSON.parse(localStorage.getItem(\"users\"));\n\n      for (var x in users.list) {\n        if (localStorage.getItem(\"userLogged\") === users.list[x].username) {\n          users.list[x].fullname = this.state.fullname;\n          users.list[x].email = this.state.email;\n          users.list[x].phone = this.state.phone;\n          users.list[x].occupation = this.state.occupation;\n          users.list[x].password = this.state.password;\n        }\n      }\n\n      localStorage.setItem(\"users\", JSON.stringify(users));\n    }\n  }]);\n\n  return UserProfile;\n}(Component);\n\nexport default withStyles(styles)(UserProfile);","map":{"version":3,"sources":["/home/camilo/Documents/Universidad/IETI/IETI_Labs/TaskPlannerPart2/src/components/UserProfile.js"],"names":["React","Component","IconButton","ArrowBack","AppBarPage","withStyles","Typography","TextField","Button","styles","theme","backButton","marginLeft","marginRight","text","width","button","UserProfile","props","state","fullname","email","phone","occupation","password","handleChangeFullname","bind","handleChangeEmail","handleChangePhone","handleChangeOccupation","handleChangePassword","handleChangeProfile","classes","iconButton","handleBackPage","fields","field","onchange","handleChangeFullName","type","textfields","map","x","default","form","window","location","href","e","setState","target","value","preventDefault","users","JSON","parse","localStorage","getItem","list","username","setItem","stringify"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ArrowBack from '@material-ui/icons/ArrowBack';\nimport AppBarPage from \"./AppBar\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Typography from \"@material-ui/core/Typography\"\nimport TextField from '@material-ui/core/TextField';\nimport Button from \"@material-ui/core/Button\";\n\nconst styles = theme => ({\n    backButton: {\n        marginLeft: -12,\n        marginRight: 20\n    },\n    text: {\n        width: \"30%\"\n    },\n    button: {\n        width: \"30%\"\n    }\n});\n\nclass UserProfile extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            fullname: '',\n            email: '',\n            phone: 0,\n            occupation: '',\n            password: ''\n        }\n\n        this.handleChangeFullname = this.handleChangeFullname.bind(this);\n        this.handleChangeEmail = this.handleChangeEmail.bind(this);\n        this.handleChangePhone = this.handleChangePhone.bind(this);\n        this.handleChangeOccupation = this.handleChangeOccupation.bind(this);\n        this.handleChangePassword = this.handleChangePassword.bind(this);\n        this.handleChangeProfile = this.handleChangeProfile.bind(this);\n    }\n\n    render() {\n\n        const {classes} = this.props;\n\n        const iconButton = (\n            <IconButton\n                className={classes.backButton}\n                onClick={this.handleBackPage}\n            >\n                <ArrowBack/>\n            </IconButton>\n        );\n\n        const fields = [\n            {\n                field: \"New full name\",\n                onchange: this.handleChangeFullName,\n                type: \"text\"\n            },\n            {\n                field: \"New email\",\n                onchange: this.handleChangeEmail,\n                type: \"text\"\n            },\n            {\n                field: \"New phone number\",\n                onchange: this.handleChangePhone,\n                type: \"number\"\n            },\n            {\n                field: \"New occupation\",\n                onchange: this.handleChangeOccupation,\n                type: \"text\"\n            },\n            {\n                field: \"New password\",\n                onchange: this.handleChangePassword,\n                type: \"password\"\n            }\n        ];\n\n        const textfields = fields.map((x) => {\n            return (\n                <>\n                    <TextField\n                        required\n                        label={x.field}\n                        onChange={x.onchange}\n                        margin=\"normal\"\n                        className={classes.text}\n                        variant=\"outlined\"\n                        type={x.type}\n                        defaultValue={x.default}\n                    />\n                    <br/>\n                </>\n            );\n        });\n\n        return (\n            <>\n                <AppBarPage button={iconButton}/>\n                <br/>\n                <br/>\n                <Typography variant=\"h2\" gutterBottom>\n                    Update your profile\n                </Typography>\n                <form className={classes.form} onSubmit={this.handleChangeProfile}>\n                    {textfields}\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.button}\n                        type=\"submit\"\n                    >\n                        Update profile\n                    </Button>\n                </form>\n\n            </>\n        );\n    };\n\n    handleBackPage() {\n        window.location.href = \"/tasks\"\n    }\n\n    handleChangeFullname(e) {\n        this.setState({fullname: e.target.value});\n    }\n\n    handleChangeEmail(e) {\n        this.setState({email: e.target.value});\n    }\n\n    handleChangePhone(e) {\n        this.setState({phone: e.target.value});\n    }\n\n    handleChangeOccupation(e) {\n        this.setState({occupation: e.target.value});\n    }\n\n    handleChangePassword(e) {\n        this.setState({password: e.target.value});\n    }\n\n    handleChangeProfile(e) {\n\n        e.preventDefault();\n\n        let users = JSON.parse(localStorage.getItem(\"users\"));\n\n        for (let x in users.list) {\n            if (localStorage.getItem(\"userLogged\") === users.list[x].username) {\n                users.list[x].fullname = this.state.fullname;\n                users.list[x].email = this.state.email;\n                users.list[x].phone = this.state.phone;\n                users.list[x].occupation = this.state.occupation;\n                users.list[x].password = this.state.password;\n            }\n        }\n\n        localStorage.setItem(\"users\", JSON.stringify(users));\n\n    }\n}\n\nexport default withStyles(styles)(UserProfile);"]},"metadata":{},"sourceType":"module"}