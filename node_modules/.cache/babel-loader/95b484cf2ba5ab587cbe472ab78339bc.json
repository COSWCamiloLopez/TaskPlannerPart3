{"ast":null,"code":"import _defineProperty from \"/home/camilo/Documents/Universidad/IETI/IETI_Labs/TaskPlannerPart1/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/camilo/Documents/Universidad/IETI/IETI_Labs/TaskPlannerPart1/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/camilo/Documents/Universidad/IETI/IETI_Labs/TaskPlannerPart1/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/camilo/Documents/Universidad/IETI/IETI_Labs/TaskPlannerPart1/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/camilo/Documents/Universidad/IETI/IETI_Labs/TaskPlannerPart1/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/camilo/Documents/Universidad/IETI/IETI_Labs/TaskPlannerPart1/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _objectSpread from \"/home/camilo/Documents/Universidad/IETI/IETI_Labs/TaskPlannerPart1/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/camilo/Documents/Universidad/IETI/IETI_Labs/TaskPlannerPart1/src/TaskPlannerDrawer.js\";\nimport React, { Component } from 'react';\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport AppBar from \"@material-ui/core/es/AppBar\";\nimport classNames from 'classnames';\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Card from \"@material-ui/core/Card\";\nimport userIcon from \"./user.png\";\nimport { Task } from \"./TaskPlanner\";\nvar drawerWidth = 350;\n\nvar styles = function styles(theme) {\n  return {\n    card: {\n      minWidth: 275\n    },\n    root: {\n      display: 'flex'\n    },\n    appBar: {\n      transition: theme.transitions.create(['margin', 'width'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen\n      })\n    },\n    appBarShift: {\n      width: \"calc(100% - \".concat(drawerWidth, \"px)\"),\n      marginLeft: drawerWidth,\n      transition: theme.transitions.create(['margin', 'width'], {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen\n      })\n    },\n    menuButton: {\n      marginLeft: 12,\n      marginRight: 20\n    },\n    hide: {\n      display: 'none'\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0\n    },\n    drawerPaper: {\n      width: drawerWidth\n    },\n    drawerHeader: _objectSpread({\n      display: 'flex',\n      alignItems: 'center',\n      padding: '0 8px'\n    }, theme.mixins.toolbar, {\n      justifyContent: 'flex-end'\n    }),\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing.unit * 3,\n      transition: theme.transitions.create('margin', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen\n      }),\n      marginLeft: -drawerWidth\n    },\n    contentShift: {\n      transition: theme.transitions.create('margin', {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen\n      }),\n      marginLeft: 0\n    },\n    userIcon: {\n      width: '30%'\n    }\n  };\n};\n\nvar TaskPlannerDrawer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TaskPlannerDrawer, _Component);\n\n  function TaskPlannerDrawer(props) {\n    var _this;\n\n    _classCallCheck(this, TaskPlannerDrawer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TaskPlannerDrawer).call(this, props));\n\n    _this.handleDrawerOpen = function () {\n      _this.setState({\n        open: true\n      });\n    };\n\n    _this.handleDrawerClose = function () {\n      _this.setState({\n        open: false\n      });\n    };\n\n    _this.state = {\n      open: false\n    };\n    return _this;\n  }\n\n  _createClass(TaskPlannerDrawer, [{\n    key: \"render\",\n    value: function render() {\n      var tasks = [{\n        responsible: {\n          name: \"Camilo\",\n          email: \"prueba@gmail.com\"\n        },\n        status: \"ready\",\n        date: new Date(),\n        user: 1\n      }];\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          theme = _this$props.theme;\n      var open = this.state.open;\n      var listTasks = tasks.map(function (x) {\n        return React.createElement(Task, {\n          tasks: x,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118\n          },\n          __self: this\n        });\n      });\n      return React.createElement(\"div\", {\n        className: classes.root,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(AppBar, {\n        position: \"fixed\",\n        className: classNames(classes.appBar, _defineProperty({}, classes.appBarShift, open)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(Toolbar, {\n        disableGutters: !open,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(IconButton, {\n        color: \"inherit\",\n        \"aria-label\": \"Open drawer\",\n        onClick: this.handleDrawerOpen,\n        className: classNames(classes.menuButton, open && classes.hide),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(MenuIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      })), React.createElement(Typography, {\n        variant: \"h6\",\n        color: \"inherit\",\n        noWrap: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, \"Task planner\"))), React.createElement(Drawer, {\n        className: classes.drawer,\n        variant: \"persistent\",\n        anchor: \"left\",\n        open: open,\n        classes: {\n          paper: classes.drawerPaper\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.drawerHeader,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(IconButton, {\n        onClick: this.handleDrawerClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(ChevronLeftIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }))), React.createElement(Divider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: classes.userData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: classes.card,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(CardContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: userIcon,\n        className: classes.userIcon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }), React.createElement(Typography, {\n        variant: \"subtitle2\",\n        gutterBottom: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, \"Johan Camilo L\\xF3pez Gir\\xF3n\")), React.createElement(Typography, {\n        variant: \"body1\",\n        gutterBottom: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, \"johan.lopez@mail.escuelaing.edu.co\"))))), React.createElement(\"main\", {\n        className: classNames(classes.content, _defineProperty({}, classes.contentShift, open)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.drawerHeader,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }), listTasks));\n    }\n  }]);\n\n  return TaskPlannerDrawer;\n}(Component);\n\nexport default withStyles(styles)(TaskPlannerDrawer);","map":{"version":3,"sources":["/home/camilo/Documents/Universidad/IETI/IETI_Labs/TaskPlannerPart1/src/TaskPlannerDrawer.js"],"names":["React","Component","withStyles","AppBar","classNames","Toolbar","IconButton","Typography","Drawer","Divider","ChevronLeftIcon","MenuIcon","CardContent","Card","userIcon","Task","drawerWidth","styles","theme","card","minWidth","root","display","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","width","marginLeft","easeOut","enteringScreen","menuButton","marginRight","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","mixins","toolbar","justifyContent","content","flexGrow","spacing","unit","contentShift","TaskPlannerDrawer","props","handleDrawerOpen","setState","open","handleDrawerClose","state","tasks","responsible","name","email","status","date","Date","user","classes","listTasks","map","x","paper","userData"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport AppBar from \"@material-ui/core/es/AppBar\";\nimport classNames from 'classnames';\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Card from \"@material-ui/core/Card\";\nimport userIcon from \"./user.png\";\nimport {Task} from \"./TaskPlanner\";\n\nconst drawerWidth = 350;\n\nconst styles = theme => ({\n    card: {\n        minWidth: 275,\n    },\n    root: {\n        display: 'flex',\n    },\n    appBar: {\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarShift: {\n        width: `calc(100% - ${drawerWidth}px)`,\n        marginLeft: drawerWidth,\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButton: {\n        marginLeft: 12,\n        marginRight: 20,\n    },\n    hide: {\n        display: 'none',\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n    },\n    drawerPaper: {\n        width: drawerWidth,\n    },\n    drawerHeader: {\n        display: 'flex',\n        alignItems: 'center',\n        padding: '0 8px',\n        ...theme.mixins.toolbar,\n        justifyContent: 'flex-end',\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing.unit * 3,\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        marginLeft: -drawerWidth,\n    },\n    contentShift: {\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n        marginLeft: 0,\n    },\n    userIcon: {\n        width: '30%'\n    }\n});\n\nclass TaskPlannerDrawer extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            open: false\n        };\n    };\n\n    handleDrawerOpen = () => {\n        this.setState({open: true});\n    };\n\n    handleDrawerClose = () => {\n        this.setState({open: false});\n    };\n\n    render() {\n\n        const tasks = [{\n            responsible: {\n                name: \"Camilo\",\n                email: \"prueba@gmail.com\"\n            },\n            status: \"ready\",\n            date: new Date(),\n            user: 1\n        }]\n\n        const {classes, theme} = this.props;\n\n        const {open} = this.state;\n\n        const listTasks = tasks.map((x) => {\n            return (\n                <Task tasks={x}/>\n            );\n        });\n\n        return (\n            <div className={classes.root}>\n                <AppBar\n                    position=\"fixed\"\n                    className={classNames(classes.appBar, {\n                        [classes.appBarShift]: open,\n                    })}\n                >\n                    <Toolbar disableGutters={!open}>\n                        <IconButton\n                            color=\"inherit\"\n                            aria-label=\"Open drawer\"\n                            onClick={this.handleDrawerOpen}\n                            className={classNames(classes.menuButton, open && classes.hide)}\n                        >\n                            <MenuIcon/>\n                        </IconButton>\n                        <Typography variant=\"h6\" color=\"inherit\" noWrap>\n                            Task planner\n                        </Typography>\n                    </Toolbar>\n                </AppBar>\n                <Drawer\n                    className={classes.drawer}\n                    variant=\"persistent\"\n                    anchor=\"left\"\n                    open={open}\n                    classes={{\n                        paper: classes.drawerPaper,\n                    }}\n                >\n                    <div className={classes.drawerHeader}>\n                        <IconButton onClick={this.handleDrawerClose}>\n                            <ChevronLeftIcon/>\n                        </IconButton>\n                    </div>\n                    <Divider/>\n                    <div className={classes.userData}>\n                        <Card className={classes.card}>\n                            <CardContent>\n                                <img src={userIcon} className={classes.userIcon}/>\n                                <Typography variant=\"subtitle2\" gutterBottom>\n                                    <b>Johan Camilo López Girón</b>\n                                </Typography>\n                                <Typography variant=\"body1\" gutterBottom>\n                                    johan.lopez@mail.escuelaing.edu.co\n                                </Typography>\n                            </CardContent>\n                        </Card>\n                    </div>\n                </Drawer>\n                <main\n                    className={classNames(classes.content, {\n                        [classes.contentShift]: open,\n                    })}\n                >\n                    <div className={classes.drawerHeader}/>\n                    {listTasks}\n                </main>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(TaskPlannerDrawer);"]},"metadata":{},"sourceType":"module"}