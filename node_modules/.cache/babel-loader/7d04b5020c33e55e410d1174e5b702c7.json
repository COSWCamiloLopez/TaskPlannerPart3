{"ast":null,"code":"import _classCallCheck from \"/home/camilo/Documents/Universidad/IETI/IETI_Labs/TaskPlannerPart2/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/camilo/Documents/Universidad/IETI/IETI_Labs/TaskPlannerPart2/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/camilo/Documents/Universidad/IETI/IETI_Labs/TaskPlannerPart2/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/camilo/Documents/Universidad/IETI/IETI_Labs/TaskPlannerPart2/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/camilo/Documents/Universidad/IETI/IETI_Labs/TaskPlannerPart2/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/camilo/Documents/Universidad/IETI/IETI_Labs/TaskPlannerPart2/src/components/SimpleModal.js\";\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Tune from '@material-ui/icons/Tune';\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\nvar styles = function styles(theme) {\n  return {\n    buttonFilter: {\n      marginRight: 20\n    },\n    leftIcon: {\n      marginRight: theme.spacing.unit\n    },\n    dialog: {\n      textAlign: \"center\"\n    },\n    text: {\n      width: \"70%\"\n    },\n    button: {\n      width: \"70%\"\n    }\n  };\n};\n\nvar FormDialog =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(FormDialog, _React$Component);\n\n  function FormDialog() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, FormDialog);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(FormDialog)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      open: false\n    };\n\n    _this.handleClickOpen = function () {\n      _this.setState({\n        open: true\n      });\n    };\n\n    _this.handleClose = function () {\n      _this.setState({\n        open: false\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(FormDialog, [{\n    key: \"render\",\n    value: function render() {\n      var classes = this.props.classes;\n      var fields = [{\n        field: \"Responsible\",\n        onchange: this.handleChangeResponsible,\n        type: \"text\"\n      }, {\n        field: \"Duedate\",\n        onchange: this.handleChangeDuedate,\n        type: \"date\",\n        default: \"2019-01-01\"\n      }];\n      var textFields = fields.map(function (x) {\n        return React.createElement(React.Fragment, null, React.createElement(TextField, {\n          required: true,\n          label: x.field,\n          onChange: x.onchange,\n          margin: \"normal\",\n          className: classes.text,\n          variant: \"outlined\",\n          type: x.type,\n          defaultValue: x.default,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }));\n      });\n      var options = [\"In progress\", \"Ready\", \"Completed\"];\n      var menuItems = options.map(function (x) {\n        return React.createElement(MenuItem, {\n          value: x,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, x);\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"inherit\",\n        className: classes.buttonFilter,\n        onClick: this.handleClickOpen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(Tune, {\n        className: classes.leftIcon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }), \"Filter\"), React.createElement(Dialog, {\n        open: this.state.open,\n        onClose: this.handleClose,\n        \"aria-labelledby\": \"form-dialog-title\",\n        className: classes.dialog,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(DialogTitle, {\n        id: \"form-dialog-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"Filter\"), React.createElement(DialogContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(DialogContentText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"Here you can filter your tasks to show them by Date, Responsible or Status\"), textFields, React.createElement(TextField, {\n        select: true,\n        required: true,\n        margin: \"normal\",\n        label: \"Status\",\n        className: classes.text,\n        value: this.state.status,\n        onChange: this.handleChangeStatus,\n        SelectProps: {\n          MenuProps: {\n            className: classes.menu\n          }\n        },\n        variant: \"outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, menuItems), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }), React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        className: classes.button,\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, \"Filter\")), React.createElement(DialogActions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.handleClose,\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, \"Cancel\"), React.createElement(Button, {\n        onClick: this.handleClose,\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, \"Subscribe\"))));\n    }\n  }]);\n\n  return FormDialog;\n}(React.Component);\n\nexport default withStyles(styles)(FormDialog);","map":{"version":3,"sources":["/home/camilo/Documents/Universidad/IETI/IETI_Labs/TaskPlannerPart2/src/components/SimpleModal.js"],"names":["React","Button","TextField","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Tune","withStyles","MenuItem","styles","theme","buttonFilter","marginRight","leftIcon","spacing","unit","dialog","textAlign","text","width","button","FormDialog","state","open","handleClickOpen","setState","handleClose","classes","props","fields","field","onchange","handleChangeResponsible","type","handleChangeDuedate","default","textFields","map","x","options","menuItems","status","handleChangeStatus","MenuProps","className","menu","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Tune from '@material-ui/icons/Tune';\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\nconst styles = theme => ({\n    buttonFilter: {\n        marginRight: 20\n    }, leftIcon: {\n        marginRight: theme.spacing.unit,\n    }, dialog: {\n        textAlign: \"center\"\n    }, text: {\n        width: \"70%\"\n    }, button: {\n        width: \"70%\"\n    }\n});\n\nclass FormDialog extends React.Component {\n    state = {\n        open: false,\n    };\n\n    handleClickOpen = () => {\n        this.setState({open: true});\n    };\n\n    handleClose = () => {\n        this.setState({open: false});\n    };\n\n    render() {\n\n        const {classes} = this.props;\n\n        const fields = [\n            {\n                field: \"Responsible\",\n                onchange: this.handleChangeResponsible,\n                type: \"text\"\n            }, {\n                field: \"Duedate\",\n                onchange: this.handleChangeDuedate,\n                type: \"date\",\n                default: \"2019-01-01\"\n            }];\n\n        const textFields = fields.map((x) => {\n            return (\n                <>\n                    <TextField\n                        required\n                        label={x.field}\n                        onChange={x.onchange}\n                        margin=\"normal\"\n                        className={classes.text}\n                        variant=\"outlined\"\n                        type={x.type}\n                        defaultValue={x.default}\n                    />\n                    <br/>\n                </>\n            );\n        });\n\n        const options = [\"In progress\", \"Ready\", \"Completed\"]\n\n        const menuItems = options.map((x) => {\n            return (\n                <MenuItem value={x}>\n                    {x}\n                </MenuItem>\n            );\n        });\n\n        return (\n            <div>\n                <Button\n                    color=\"inherit\"\n                    className={classes.buttonFilter}\n                    onClick={this.handleClickOpen}\n                >\n                    <Tune className={classes.leftIcon}/>\n                    Filter\n                </Button>\n                <Dialog\n                    open={this.state.open}\n                    onClose={this.handleClose}\n                    aria-labelledby=\"form-dialog-title\"\n                    className={classes.dialog}\n                >\n                    <DialogTitle id=\"form-dialog-title\">Filter</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            Here you can filter your tasks to show them by Date, Responsible or Status\n                        </DialogContentText>\n                        {textFields}\n                        <TextField\n                            select\n                            required\n                            margin=\"normal\"\n                            label=\"Status\"\n                            className={classes.text}\n                            value={this.state.status}\n                            onChange={this.handleChangeStatus}\n                            SelectProps={{\n                                MenuProps: {\n                                    className: classes.menu,\n                                },\n                            }}\n                            variant=\"outlined\"\n                        >\n                            {menuItems}\n                        </TextField>\n                        <br/>\n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className={classes.button}\n                            type=\"submit\"\n                        >\n                            Filter\n                        </Button>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"primary\">\n                            Cancel\n                        </Button>\n                        <Button onClick={this.handleClose} color=\"primary\">\n                            Subscribe\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(FormDialog);"]},"metadata":{},"sourceType":"module"}