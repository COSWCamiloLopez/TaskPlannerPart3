{"ast":null,"code":"import _defineProperty from \"/home/camilo/Documents/Universidad/IETI/IETI_Labs/TaskPlannerPart2/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/camilo/Documents/Universidad/IETI/IETI_Labs/TaskPlannerPart2/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/camilo/Documents/Universidad/IETI/IETI_Labs/TaskPlannerPart2/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/camilo/Documents/Universidad/IETI/IETI_Labs/TaskPlannerPart2/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/camilo/Documents/Universidad/IETI/IETI_Labs/TaskPlannerPart2/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/camilo/Documents/Universidad/IETI/IETI_Labs/TaskPlannerPart2/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/camilo/Documents/Universidad/IETI/IETI_Labs/TaskPlannerPart2/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _objectSpread from \"/home/camilo/Documents/Universidad/IETI/IETI_Labs/TaskPlannerPart2/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/camilo/Documents/Universidad/IETI/IETI_Labs/TaskPlannerPart2/src/components/TaskPlannerDrawer.js\";\nimport React, { Component } from 'react';\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport AppBar from \"@material-ui/core/es/AppBar\";\nimport classNames from 'classnames';\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Card from \"@material-ui/core/Card\";\nimport userIcon from \"../images/user.png\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ExitIcon from \"../images/baseline-exit_to_app-24px.svg\";\nimport Task from \"./Task\";\nimport Person from '@material-ui/icons/Person';\nimport Create from '@material-ui/icons/Create';\nimport Button from \"@material-ui/core/Button\";\nimport Modal from \"./SimpleModal\";\nvar drawerWidth = 350;\n\nvar styles = function styles(theme) {\n  return {\n    card: {\n      minWidth: 275\n    },\n    root: {\n      display: 'flex'\n    },\n    appBar: {\n      transition: theme.transitions.create(['margin', 'width'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen\n      })\n    },\n    appBarShift: {\n      width: \"calc(100% - \".concat(drawerWidth, \"px)\"),\n      marginLeft: drawerWidth,\n      transition: theme.transitions.create(['margin', 'width'], {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen\n      })\n    },\n    menuButton: {\n      marginLeft: 12,\n      marginRight: 20\n    },\n    hide: {\n      display: 'none'\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0\n    },\n    drawerPaper: {\n      width: drawerWidth\n    },\n    drawerHeader: _objectSpread({\n      display: 'flex',\n      alignItems: 'center',\n      padding: '0 8px'\n    }, theme.mixins.toolbar, {\n      justifyContent: 'flex-end'\n    }),\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing.unit * 3,\n      transition: theme.transitions.create('margin', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen\n      }),\n      marginLeft: -drawerWidth\n    },\n    contentShift: {\n      transition: theme.transitions.create('margin', {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen\n      }),\n      marginLeft: 0\n    },\n    userIcon: {\n      width: '30%'\n    },\n    grow: {\n      flexGrow: 1\n    },\n    button: {\n      marginRight: 20\n    },\n    leftIcon: {\n      marginRight: theme.spacing.unit\n    },\n    toolbarTitle: {\n      flex: 1,\n      textAlign: \"left\"\n    }\n  };\n};\n\nvar TaskPlannerDrawer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TaskPlannerDrawer, _Component);\n\n  function TaskPlannerDrawer(props) {\n    var _this;\n\n    _classCallCheck(this, TaskPlannerDrawer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TaskPlannerDrawer).call(this, props));\n\n    _this.handleDrawerOpen = function () {\n      _this.setState({\n        open: true\n      });\n    };\n\n    _this.handleDrawerClose = function () {\n      _this.setState({\n        open: false\n      });\n    };\n\n    _this.state = {\n      open: false,\n      tasks: []\n    };\n    _this.handleChangeIsLoggedIn = _this.handleChangeIsLoggedIn.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(TaskPlannerDrawer, [{\n    key: \"render\",\n    value: function render() {\n      var classes = this.props.classes;\n      var open = this.state.open;\n\n      if (localStorage.getItem(\"tasks\") === null) {\n        var _tasks = {\n          list: []\n        };\n        localStorage.setItem(\"tasks\", JSON.stringify(_tasks));\n      }\n\n      var json = JSON.parse(localStorage.getItem(\"tasks\"));\n      var tasks = json.list.map(function (x) {\n        return React.createElement(Task, {\n          tasks: x,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134\n          },\n          __self: this\n        });\n      });\n      var user;\n      var users = JSON.parse(localStorage.getItem(\"users\"));\n\n      for (var x in users.list) {\n        if (users.list[x].username === localStorage.getItem(\"userLogged\")) {\n          user = users.list[x];\n        }\n      }\n\n      return React.createElement(\"div\", {\n        className: classes.root,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(AppBar, {\n        position: \"fixed\",\n        className: classNames(classes.appBar, _defineProperty({}, classes.appBarShift, open)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(Toolbar, {\n        disableGutters: !open,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(IconButton, {\n        color: \"inherit\",\n        \"aria-label\": \"Open drawer\",\n        onClick: this.handleDrawerOpen,\n        className: classNames(classes.menuButton, open && classes.hide),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(MenuIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      })), React.createElement(Typography, {\n        variant: \"h6\",\n        color: \"inherit\",\n        noWrap: true,\n        className: classes.toolbarTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, \"Task planner\"), React.createElement(Button, {\n        color: \"inherit\",\n        className: classes.button,\n        onClick: this.handleNewTask,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(Create, {\n        className: classes.leftIcon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }), \"New task\"), React.createElement(Modal, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }))), React.createElement(Drawer, {\n        className: classes.drawer,\n        variant: \"persistent\",\n        anchor: \"left\",\n        open: open,\n        classes: {\n          paper: classes.drawerPaper\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.drawerHeader,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, React.createElement(IconButton, {\n        onClick: this.handleDrawerClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, React.createElement(ChevronLeftIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }))), React.createElement(Divider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: classes.userData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: classes.card,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, React.createElement(CardContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: userIcon,\n        className: classes.userIcon,\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }), React.createElement(Typography, {\n        variant: \"subtitle2\",\n        gutterBottom: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, user.fullname)), React.createElement(Typography, {\n        variant: \"body1\",\n        gutterBottom: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, user.email), React.createElement(Typography, {\n        variant: \"body1\",\n        gutterBottom: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, user.occupation), React.createElement(Typography, {\n        variant: \"body1\",\n        gutterBottom: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, \"Cellphone: \", user.phone))), React.createElement(List, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, React.createElement(ListItem, {\n        button: true,\n        onClick: this.handleProfilePage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, React.createElement(ListItemIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, React.createElement(Person, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      })), React.createElement(ListItemText, {\n        primary: \"Profile\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      })), React.createElement(ListItem, {\n        button: true,\n        onClick: this.handleChangeIsLoggedIn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, React.createElement(ListItemIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: ExitIcon,\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      })), React.createElement(ListItemText, {\n        primary: \"Logout\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }))))), React.createElement(\"main\", {\n        className: classNames(classes.content, _defineProperty({}, classes.contentShift, open)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.drawerHeader,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }), tasks));\n    }\n  }, {\n    key: \"handleChangeIsLoggedIn\",\n    value: function handleChangeIsLoggedIn() {\n      localStorage.setItem(\"isLoggedIn\", \"false\");\n      window.location.href = '/login';\n    }\n  }, {\n    key: \"handleProfilePage\",\n    value: function handleProfilePage() {\n      window.location.href = \"/profile\";\n    }\n  }, {\n    key: \"handleNewTask\",\n    value: function handleNewTask() {\n      window.location.href = \"/newtask\";\n    }\n  }]);\n\n  return TaskPlannerDrawer;\n}(Component);\n\nexport default withStyles(styles)(TaskPlannerDrawer);","map":{"version":3,"sources":["/home/camilo/Documents/Universidad/IETI/IETI_Labs/TaskPlannerPart2/src/components/TaskPlannerDrawer.js"],"names":["React","Component","withStyles","AppBar","classNames","Toolbar","IconButton","Typography","Drawer","Divider","ChevronLeftIcon","MenuIcon","CardContent","Card","userIcon","List","ListItem","ListItemIcon","ListItemText","Task","Person","Create","Button","Modal","drawerWidth","styles","theme","card","minWidth","root","display","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","width","marginLeft","easeOut","enteringScreen","menuButton","marginRight","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","mixins","toolbar","justifyContent","content","flexGrow","spacing","unit","contentShift","grow","button","leftIcon","toolbarTitle","flex","textAlign","TaskPlannerDrawer","props","handleDrawerOpen","setState","open","handleDrawerClose","state","tasks","handleChangeIsLoggedIn","bind","classes","localStorage","getItem","list","setItem","JSON","stringify","json","parse","map","x","user","users","username","handleNewTask","paper","userData","fullname","email","occupation","phone","handleProfilePage","ExitIcon","window","location","href"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport AppBar from \"@material-ui/core/es/AppBar\";\nimport classNames from 'classnames';\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Card from \"@material-ui/core/Card\";\nimport userIcon from \"../images/user.png\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ExitIcon from \"../images/baseline-exit_to_app-24px.svg\";\nimport Task from \"./Task\";\nimport Person from '@material-ui/icons/Person';\nimport Create from '@material-ui/icons/Create';\nimport Button from \"@material-ui/core/Button\";\nimport Modal from \"./SimpleModal\";\n\n\nconst drawerWidth = 350;\n\nconst styles = theme => ({\n    card: {\n        minWidth: 275,\n    },\n    root: {\n        display: 'flex',\n    },\n    appBar: {\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarShift: {\n        width: `calc(100% - ${drawerWidth}px)`,\n        marginLeft: drawerWidth,\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButton: {\n        marginLeft: 12,\n        marginRight: 20,\n    },\n    hide: {\n        display: 'none',\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n    },\n    drawerPaper: {\n        width: drawerWidth,\n    },\n    drawerHeader: {\n        display: 'flex',\n        alignItems: 'center',\n        padding: '0 8px',\n        ...theme.mixins.toolbar,\n        justifyContent: 'flex-end',\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing.unit * 3,\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        marginLeft: -drawerWidth,\n    },\n    contentShift: {\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n        marginLeft: 0,\n    },\n    userIcon: {\n        width: '30%'\n    },\n    grow: {\n        flexGrow: 1,\n    },\n    button: {\n        marginRight: 20\n    }, leftIcon: {\n        marginRight: theme.spacing.unit,\n    },\n    toolbarTitle: {\n        flex: 1,\n        textAlign: \"left\"\n    }\n});\n\nclass TaskPlannerDrawer extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            open: false,\n            tasks: []\n        };\n\n        this.handleChangeIsLoggedIn = this.handleChangeIsLoggedIn.bind(this);\n    };\n\n    render() {\n\n        const {classes} = this.props;\n\n        const {open} = this.state;\n\n        if (localStorage.getItem(\"tasks\") === null) {\n            const tasks = {\n                list: []\n            }\n            localStorage.setItem(\"tasks\", JSON.stringify(tasks))\n        }\n\n        const json = JSON.parse(localStorage.getItem(\"tasks\"));\n\n        const tasks = json.list.map((x) => {\n            return (\n                <Task tasks={x}/>\n            );\n        });\n\n        let user;\n\n        const users = JSON.parse(localStorage.getItem(\"users\"));\n\n        for (let x in users.list) {\n            if (users.list[x].username === localStorage.getItem(\"userLogged\")) {\n                user = users.list[x];\n            }\n        }\n\n        return (\n            <div className={classes.root}>\n                <AppBar\n                    position=\"fixed\"\n                    className={classNames(classes.appBar, {\n                        [classes.appBarShift]: open,\n                    })}\n                >\n                    <Toolbar disableGutters={!open}>\n                        <IconButton\n                            color=\"inherit\"\n                            aria-label=\"Open drawer\"\n                            onClick={this.handleDrawerOpen}\n                            className={classNames(classes.menuButton, open && classes.hide)}\n                        >\n                            <MenuIcon/>\n                        </IconButton>\n                        <Typography variant=\"h6\" color=\"inherit\" noWrap className={classes.toolbarTitle}>\n                            Task planner\n                        </Typography>\n                        <Button\n                            color=\"inherit\"\n                            className={classes.button}\n                            onClick={this.handleNewTask}\n                        >\n                            <Create className={classes.leftIcon}/>\n                            New task\n                        </Button>\n                        <Modal/>\n                    </Toolbar>\n                </AppBar>\n                <Drawer\n                    className={classes.drawer}\n                    variant=\"persistent\"\n                    anchor=\"left\"\n                    open={open}\n                    classes={{\n                        paper: classes.drawerPaper,\n                    }}\n                >\n                    <div className={classes.drawerHeader}>\n                        <IconButton onClick={this.handleDrawerClose}>\n                            <ChevronLeftIcon/>\n                        </IconButton>\n                    </div>\n                    <Divider/>\n                    <div className={classes.userData}>\n                        <Card className={classes.card}>\n                            <CardContent>\n                                <img src={userIcon} className={classes.userIcon} alt=\"\"/>\n                                <Typography variant=\"subtitle2\" gutterBottom>\n                                    <b>{user.fullname}</b>\n                                </Typography>\n                                <Typography variant=\"body1\" gutterBottom>\n                                    {user.email}\n                                </Typography>\n                                <Typography variant=\"body1\" gutterBottom>\n                                    {user.occupation}\n                                </Typography>\n                                <Typography variant=\"body1\" gutterBottom>\n                                    Cellphone: {user.phone}\n                                </Typography>\n                            </CardContent>\n                        </Card>\n                        <List>\n                            <ListItem\n                                button\n                                onClick={this.handleProfilePage}\n                            >\n                                <ListItemIcon>\n                                    <Person/>\n                                </ListItemIcon>\n                                <ListItemText primary=\"Profile\"/>\n                            </ListItem>\n                            <ListItem\n                                button\n                                onClick={this.handleChangeIsLoggedIn}\n                            >\n                                <ListItemIcon>\n                                    <img src={ExitIcon} alt=\"\"/>\n                                </ListItemIcon>\n                                <ListItemText primary=\"Logout\"/>\n                            </ListItem>\n                        </List>\n                    </div>\n                </Drawer>\n                <main\n                    className={classNames(classes.content, {\n                        [classes.contentShift]: open,\n                    })}\n                >\n                    <div className={classes.drawerHeader}/>\n                    {tasks}\n                </main>\n            </div>\n        );\n    }\n\n    handleDrawerOpen = () => {\n        this.setState({open: true});\n    };\n\n    handleDrawerClose = () => {\n        this.setState({open: false});\n    };\n\n    handleChangeIsLoggedIn() {\n        localStorage.setItem(\"isLoggedIn\", \"false\");\n        window.location.href = '/login';\n    }\n\n    handleProfilePage() {\n        window.location.href = \"/profile\"\n    }\n\n    handleNewTask() {\n        window.location.href = \"/newtask\"\n    }\n}\n\nexport default withStyles(styles)(TaskPlannerDrawer);"]},"metadata":{},"sourceType":"module"}