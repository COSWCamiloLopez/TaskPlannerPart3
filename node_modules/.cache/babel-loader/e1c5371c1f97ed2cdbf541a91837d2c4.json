{"ast":null,"code":"import _classCallCheck from \"/home/camilo/Documents/Universidad/IETI/IETI_Labs/TaskPlannerPart2/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/camilo/Documents/Universidad/IETI/IETI_Labs/TaskPlannerPart2/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/camilo/Documents/Universidad/IETI/IETI_Labs/TaskPlannerPart2/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/camilo/Documents/Universidad/IETI/IETI_Labs/TaskPlannerPart2/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/camilo/Documents/Universidad/IETI/IETI_Labs/TaskPlannerPart2/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/camilo/Documents/Universidad/IETI/IETI_Labs/TaskPlannerPart2/src/components/SimpleModal.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Modal from '@material-ui/core/Modal';\nimport Button from '@material-ui/core/Button';\nimport Tune from \"./TaskPlannerDrawer\";\n\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n  var top = 50 + rand();\n  var left = 50 + rand();\n  return {\n    top: \"\".concat(top, \"%\"),\n    left: \"\".concat(left, \"%\"),\n    transform: \"translate(-\".concat(top, \"%, -\").concat(left, \"%)\")\n  };\n}\n\nvar styles = function styles(theme) {\n  return {\n    paper: {\n      position: 'absolute',\n      width: theme.spacing.unit * 50,\n      backgroundColor: theme.palette.background.paper,\n      boxShadow: theme.shadows[5],\n      padding: theme.spacing.unit * 4,\n      outline: 'none'\n    },\n    button: {\n      marginRight: 20\n    }\n  };\n};\n\nvar SimpleModal =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SimpleModal, _React$Component);\n\n  function SimpleModal() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SimpleModal);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SimpleModal)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      open: false\n    };\n\n    _this.handleOpen = function () {\n      _this.setState({\n        open: true\n      });\n    };\n\n    _this.handleClose = function () {\n      _this.setState({\n        open: false\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(SimpleModal, [{\n    key: \"render\",\n    value: function render() {\n      var classes = this.props.classes;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"inherit\",\n        className: classes.button,\n        onClick: this.handleOpen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(Tune, {\n        className: classes.leftIcon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }), \"Filter\"), React.createElement(Modal, {\n        \"aria-labelledby\": \"simple-modal-title\",\n        \"aria-describedby\": \"simple-modal-description\",\n        open: this.state.open,\n        onClose: this.handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: getModalStyle(),\n        className: classes.paper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"h6\",\n        id: \"modal-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"Text in a modal\"), React.createElement(Typography, {\n        variant: \"subtitle1\",\n        id: \"simple-modal-description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"Duis mollis, est non commodo luctus, nisi erat porttitor ligula.\"), React.createElement(SimpleModalWrapped, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return SimpleModal;\n}(React.Component);\n\nSimpleModal.propTypes = {\n  classes: PropTypes.object.isRequired\n}; // We need an intermediary variable for handling the recursive nesting.\n\nvar SimpleModalWrapped = withStyles(styles)(SimpleModal);\nexport default SimpleModalWrapped;","map":{"version":3,"sources":["/home/camilo/Documents/Universidad/IETI/IETI_Labs/TaskPlannerPart2/src/components/SimpleModal.js"],"names":["React","PropTypes","withStyles","Typography","Modal","Button","Tune","rand","Math","round","random","getModalStyle","top","left","transform","styles","theme","paper","position","width","spacing","unit","backgroundColor","palette","background","boxShadow","shadows","padding","outline","button","marginRight","SimpleModal","state","open","handleOpen","setState","handleClose","classes","props","leftIcon","Component","propTypes","object","isRequired","SimpleModalWrapped"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,UAAR,QAAyB,0BAAzB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,IAAP,MAAiB,qBAAjB;;AAEA,SAASC,IAAT,GAAgB;AACZ,SAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,IAAiC,EAAxC;AACH;;AAED,SAASC,aAAT,GAAyB;AACrB,MAAMC,GAAG,GAAG,KAAKL,IAAI,EAArB;AACA,MAAMM,IAAI,GAAG,KAAKN,IAAI,EAAtB;AAEA,SAAO;AACHK,IAAAA,GAAG,YAAKA,GAAL,MADA;AAEHC,IAAAA,IAAI,YAAKA,IAAL,MAFD;AAGHC,IAAAA,SAAS,uBAAgBF,GAAhB,iBAA0BC,IAA1B;AAHN,GAAP;AAKH;;AAED,IAAME,MAAM,GAAG,SAATA,MAAS,CAAAC,KAAK;AAAA,SAAK;AACrBC,IAAAA,KAAK,EAAE;AACHC,MAAAA,QAAQ,EAAE,UADP;AAEHC,MAAAA,KAAK,EAAEH,KAAK,CAACI,OAAN,CAAcC,IAAd,GAAqB,EAFzB;AAGHC,MAAAA,eAAe,EAAEN,KAAK,CAACO,OAAN,CAAcC,UAAd,CAAyBP,KAHvC;AAIHQ,MAAAA,SAAS,EAAET,KAAK,CAACU,OAAN,CAAc,CAAd,CAJR;AAKHC,MAAAA,OAAO,EAAEX,KAAK,CAACI,OAAN,CAAcC,IAAd,GAAqB,CAL3B;AAMHO,MAAAA,OAAO,EAAE;AANN,KADc;AASrBC,IAAAA,MAAM,EAAE;AACJC,MAAAA,WAAW,EAAE;AADT;AATa,GAAL;AAAA,CAApB;;IAcMC,W;;;;;;;;;;;;;;;;;UACFC,K,GAAQ;AACJC,MAAAA,IAAI,EAAE;AADF,K;;UAIRC,U,GAAa,YAAM;AACf,YAAKC,QAAL,CAAc;AAACF,QAAAA,IAAI,EAAE;AAAP,OAAd;AACH,K;;UAEDG,W,GAAc,YAAM;AAChB,YAAKD,QAAL,CAAc;AAACF,QAAAA,IAAI,EAAE;AAAP,OAAd;AACH,K;;;;;;;6BAEQ;AAAA,UACEI,OADF,GACa,KAAKC,KADlB,CACED,OADF;AAGL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AACI,QAAA,KAAK,EAAC,SADV;AAEI,QAAA,SAAS,EAAEA,OAAO,CAACR,MAFvB;AAGI,QAAA,OAAO,EAAE,KAAKK,UAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKI,oBAAC,IAAD;AAAM,QAAA,SAAS,EAAEG,OAAO,CAACE,QAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALJ,WADJ,EASI,oBAAC,KAAD;AACI,2BAAgB,oBADpB;AAEI,4BAAiB,0BAFrB;AAGI,QAAA,IAAI,EAAE,KAAKP,KAAL,CAAWC,IAHrB;AAII,QAAA,OAAO,EAAE,KAAKG,WAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAMI;AAAK,QAAA,KAAK,EAAEzB,aAAa,EAAzB;AAA6B,QAAA,SAAS,EAAE0B,OAAO,CAACpB,KAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AAAyB,QAAA,EAAE,EAAC,aAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,EAII,oBAAC,UAAD;AAAY,QAAA,OAAO,EAAC,WAApB;AAAgC,QAAA,EAAE,EAAC,0BAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4EAJJ,EAOI,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPJ,CANJ,CATJ,CADJ;AA4BH;;;;EA5CqBjB,KAAK,CAACwC,S;;AA+ChCT,WAAW,CAACU,SAAZ,GAAwB;AACpBJ,EAAAA,OAAO,EAAEpC,SAAS,CAACyC,MAAV,CAAiBC;AADN,CAAxB,C,CAIA;;AACA,IAAMC,kBAAkB,GAAG1C,UAAU,CAACa,MAAD,CAAV,CAAmBgB,WAAnB,CAA3B;AAEA,eAAea,kBAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {withStyles} from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Modal from '@material-ui/core/Modal';\nimport Button from '@material-ui/core/Button';\nimport Tune from \"./TaskPlannerDrawer\";\n\nfunction rand() {\n    return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n    const top = 50 + rand();\n    const left = 50 + rand();\n\n    return {\n        top: `${top}%`,\n        left: `${left}%`,\n        transform: `translate(-${top}%, -${left}%)`,\n    };\n}\n\nconst styles = theme => ({\n    paper: {\n        position: 'absolute',\n        width: theme.spacing.unit * 50,\n        backgroundColor: theme.palette.background.paper,\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing.unit * 4,\n        outline: 'none',\n    },\n    button: {\n        marginRight: 20\n    }\n});\n\nclass SimpleModal extends React.Component {\n    state = {\n        open: false,\n    };\n\n    handleOpen = () => {\n        this.setState({open: true});\n    };\n\n    handleClose = () => {\n        this.setState({open: false});\n    };\n\n    render() {\n        const {classes} = this.props;\n\n        return (\n            <div>\n                <Button\n                    color=\"inherit\"\n                    className={classes.button}\n                    onClick={this.handleOpen}\n                >\n                    <Tune className={classes.leftIcon}/>\n                    Filter\n                </Button>\n                <Modal\n                    aria-labelledby=\"simple-modal-title\"\n                    aria-describedby=\"simple-modal-description\"\n                    open={this.state.open}\n                    onClose={this.handleClose}\n                >\n                    <div style={getModalStyle()} className={classes.paper}>\n                        <Typography variant=\"h6\" id=\"modal-title\">\n                            Text in a modal\n                        </Typography>\n                        <Typography variant=\"subtitle1\" id=\"simple-modal-description\">\n                            Duis mollis, est non commodo luctus, nisi erat porttitor ligula.\n                        </Typography>\n                        <SimpleModalWrapped/>\n                    </div>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nSimpleModal.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\n// We need an intermediary variable for handling the recursive nesting.\nconst SimpleModalWrapped = withStyles(styles)(SimpleModal);\n\nexport default SimpleModalWrapped;\n"]},"metadata":{},"sourceType":"module"}