{"ast":null,"code":"import _classCallCheck from \"/home/camilo/Documents/Universidad/IETI/IETI_Labs/TaskPlannerPart2/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/camilo/Documents/Universidad/IETI/IETI_Labs/TaskPlannerPart2/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/camilo/Documents/Universidad/IETI/IETI_Labs/TaskPlannerPart2/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/camilo/Documents/Universidad/IETI/IETI_Labs/TaskPlannerPart2/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/camilo/Documents/Universidad/IETI/IETI_Labs/TaskPlannerPart2/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport React, { Component } from 'react';\n\nvar TaskList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TaskList, _Component);\n\n  function TaskList(props) {\n    var _this;\n\n    _classCallCheck(this, TaskList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TaskList).call(this, props));\n    _this.state = {\n      tasks: []\n    };\n\n    _this.handleChangeTasks();\n\n    return _this;\n  }\n\n  _createClass(TaskList, [{\n    key: \"render\",\n    value: function render() {\n      var listTasks = this.state.tasks.map(function (x) {\n        return x;\n      });\n      return React.createElement(React.Fragment, null, listTasks);\n    }\n  }, {\n    key: \"handleChangeTasks\",\n    value: function handleChangeTasks() {\n      var newTask = this.props.task;\n      this.setState(function (prevState) {\n        return {\n          tasks: prevState.tasks.concat(newTask)\n        };\n      });\n    }\n  }]);\n\n  return TaskList;\n}(Component);\n\nexport default TaskList;","map":{"version":3,"sources":["/home/camilo/Documents/Universidad/IETI/IETI_Labs/TaskPlannerPart2/src/components/TaskList.js"],"names":["React","Component","TaskList","props","state","tasks","handleChangeTasks","listTasks","map","x","newTask","task","setState","prevState","concat"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;IAEMC,Q;;;;;AAEF,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,kFAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE;AADE,KAAb;;AAIA,UAAKC,iBAAL;;AAPe;AASlB;;;;6BAEQ;AAEL,UAAMC,SAAS,GAAG,KAAKH,KAAL,CAAWC,KAAX,CAAiBG,GAAjB,CAAqB,UAACC,CAAD,EAAO;AAC1C,eACIA,CADJ;AAGH,OAJiB,CAAlB;AAMA,aACI,0CACKF,SADL,CADJ;AAKH;;;wCAEmB;AAEhB,UAAMG,OAAO,GAAG,KAAKP,KAAL,CAAWQ,IAA3B;AAEA,WAAKC,QAAL,CAAc,UAAAC,SAAS;AAAA,eAAK;AACpBR,UAAAA,KAAK,EAAEQ,SAAS,CAACR,KAAV,CAAgBS,MAAhB,CAAuBJ,OAAvB;AADa,SAAL;AAAA,OAAvB;AAIH;;;;EApCkBT,S;;AAuCvB,eAAeC,QAAf","sourcesContent":["import React, {Component} from 'react';\n\nclass TaskList extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            tasks: []\n        }\n\n        this.handleChangeTasks();\n\n    }\n\n    render() {\n\n        const listTasks = this.state.tasks.map((x) => {\n            return (\n                x\n            );\n        })\n\n        return (\n            <>\n                {listTasks}\n            </>\n        );\n    }\n\n    handleChangeTasks() {\n\n        const newTask = this.props.task;\n\n        this.setState(prevState => ({\n                tasks: prevState.tasks.concat(newTask)\n            })\n        )\n    }\n}\n\nexport default TaskList;"]},"metadata":{},"sourceType":"module"}